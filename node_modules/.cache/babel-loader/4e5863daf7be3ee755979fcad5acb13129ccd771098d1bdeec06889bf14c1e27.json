{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { db } from '../firebase';\nimport { collection, where, query, getDocs, updateDoc, doc } from 'firebase/firestore';\nexport default {\n  name: 'AssignCartons',\n  props: {\n    cartonesAsignados: Function\n  },\n  data() {\n    return {\n      selectedSeller: '',\n      rangeStart: null,\n      rangeEnd: null,\n      sellers: [{\n        id: '1',\n        name: 'Vendedor 1'\n      }, {\n        id: '2',\n        name: 'Vendedor 2'\n      }, {\n        id: '3',\n        name: 'Vendedor 3'\n      }]\n    };\n  },\n  methods: {\n    async assignCartons() {\n      try {\n        const cartonesRef = collection(db, 'cartones');\n        const q = query(cartonesRef, where('estado', '==', 'disponible'), where('serial', '>=', this.rangeStart.toString()), where('serial', '<=', this.rangeEnd.toString()));\n        const querySnapshot = await getDocs(q);\n        const updatePromises = querySnapshot.docs.map(async docSnapshot => {\n          const cartonRef = doc(db, 'cartones', docSnapshot.id);\n          await updateDoc(cartonRef, {\n            estado: 'asignado',\n            vendedorId: this.selectedSeller\n          });\n        });\n        await Promise.all(updatePromises);\n        this.$emit('cartones-asignados');\n        alert(`Cartones del ${this.rangeStart} al ${this.rangeEnd} asignados a ${this.sellers.find(s => s.id === this.selectedSeller).name}`);\n      } catch (error) {\n        console.error('Error al asignar cartones:', error);\n        alert('Error al asignar cartones: ' + error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["db","collection","where","query","getDocs","updateDoc","doc","name","props","cartonesAsignados","Function","data","selectedSeller","rangeStart","rangeEnd","sellers","id","methods","assignCartons","cartonesRef","q","toString","querySnapshot","updatePromises","docs","map","docSnapshot","cartonRef","estado","vendedorId","Promise","all","$emit","alert","find","s","error","console","message"],"sources":["D:\\Lotweb\\venta-cartones\\src\\components\\AssignCartons.vue"],"sourcesContent":["```vue\r\n<template>\r\n  <div class=\"space-y-4\">\r\n    <!-- Selección de Vendedor -->\r\n    <div>\r\n      <label for=\"seller\" class=\"block text-sm font-medium text-gray-700\">Seleccionar Vendedor</label>\r\n      <select\r\n        id=\"seller\"\r\n        v-model=\"selectedSeller\"\r\n        class=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-lg shadow-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-300\"\r\n      >\r\n        <option value=\"\" disabled>Elige un vendedor</option>\r\n        <option v-for=\"seller in sellers\" :key=\"seller.id\" :value=\"seller.id\">{{ seller.name }}</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- Rango de Cartones -->\r\n    <div>\r\n      <label for=\"range\" class=\"block text-sm font-medium text-gray-700\">Rango de Cartones</label>\r\n      <div class=\"flex space-x-4 mt-1\">\r\n        <input\r\n          v-model.number=\"rangeStart\"\r\n          type=\"number\"\r\n          id=\"rangeStart\"\r\n          placeholder=\"Desde\"\r\n          class=\"w-1/2 px-4 py-2 border border-gray-300 rounded-lg shadow-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-300\"\r\n          min=\"1\"\r\n        />\r\n        <input\r\n          v-model.number=\"rangeEnd\"\r\n          type=\"number\"\r\n          id=\"rangeEnd\"\r\n          placeholder=\"Hasta\"\r\n          class=\"w-1/2 px-4 py-2 border border-gray-300 rounded-lg shadow-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-300\"\r\n          min=\"1\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Botón de Asignar -->\r\n    <button\r\n      @click=\"assignCartons\"\r\n      :disabled=\"!selectedSeller || !rangeStart || !rangeEnd || rangeStart > rangeEnd\"\r\n      class=\"w-full bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-opacity-50 transition duration-300\"\r\n    >\r\n      Asignar Cartones\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { db } from '../firebase';\r\nimport { collection, where, query, getDocs, updateDoc, doc } from 'firebase/firestore';\r\n\r\nexport default {\r\n  name: 'AssignCartons',\r\n  props: {\r\n    cartonesAsignados: Function\r\n  },\r\n  data() {\r\n    return {\r\n      selectedSeller: '',\r\n      rangeStart: null,\r\n      rangeEnd: null,\r\n      sellers: [\r\n        { id: '1', name: 'Vendedor 1' },\r\n        { id: '2', name: 'Vendedor 2' },\r\n        { id: '3', name: 'Vendedor 3' },\r\n      ]\r\n    };\r\n  },\r\n  methods: {\r\n    async assignCartons() {\r\n      try {\r\n        const cartonesRef = collection(db, 'cartones');\r\n        const q = query(cartonesRef, where('estado', '==', 'disponible'), where('serial', '>=', this.rangeStart.toString()), where('serial', '<=', this.rangeEnd.toString()));\r\n        const querySnapshot = await getDocs(q);\r\n\r\n        const updatePromises = querySnapshot.docs.map(async (docSnapshot) => {\r\n          const cartonRef = doc(db, 'cartones', docSnapshot.id);\r\n          await updateDoc(cartonRef, { estado: 'asignado', vendedorId: this.selectedSeller });\r\n        });\r\n\r\n        await Promise.all(updatePromises);\r\n        this.$emit('cartones-asignados');\r\n        alert(`Cartones del ${this.rangeStart} al ${this.rangeEnd} asignados a ${this.sellers.find(s => s.id === this.selectedSeller).name}`);\r\n      } catch (error) {\r\n        console.error('Error al asignar cartones:', error);\r\n        alert('Error al asignar cartones: ' + error.message);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Estilos adicionales si es necesario */\r\n</style>\r\n```"],"mappings":";;;AAmDA,SAASA,EAAC,QAAS,aAAa;AAChC,SAASC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,SAAS,EAAEC,GAAE,QAAS,oBAAoB;AAEtF,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE;IACLC,iBAAiB,EAAEC;EACrB,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,EAAE;MAClBC,UAAU,EAAE,IAAI;MAChBC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAE,CACP;QAAEC,EAAE,EAAE,GAAG;QAAET,IAAI,EAAE;MAAa,CAAC,EAC/B;QAAES,EAAE,EAAE,GAAG;QAAET,IAAI,EAAE;MAAa,CAAC,EAC/B;QAAES,EAAE,EAAE,GAAG;QAAET,IAAI,EAAE;MAAa,CAAC;IAEnC,CAAC;EACH,CAAC;EACDU,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,WAAU,GAAIlB,UAAU,CAACD,EAAE,EAAE,UAAU,CAAC;QAC9C,MAAMoB,CAAA,GAAIjB,KAAK,CAACgB,WAAW,EAAEjB,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,YAAY,CAAC,EAAEA,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAACW,UAAU,CAACQ,QAAQ,CAAC,CAAC,CAAC,EAAEnB,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAACY,QAAQ,CAACO,QAAQ,CAAC,CAAC,CAAC,CAAC;QACrK,MAAMC,aAAY,GAAI,MAAMlB,OAAO,CAACgB,CAAC,CAAC;QAEtC,MAAMG,cAAa,GAAID,aAAa,CAACE,IAAI,CAACC,GAAG,CAAC,MAAOC,WAAW,IAAK;UACnE,MAAMC,SAAQ,GAAIrB,GAAG,CAACN,EAAE,EAAE,UAAU,EAAE0B,WAAW,CAACV,EAAE,CAAC;UACrD,MAAMX,SAAS,CAACsB,SAAS,EAAE;YAAEC,MAAM,EAAE,UAAU;YAAEC,UAAU,EAAE,IAAI,CAACjB;UAAe,CAAC,CAAC;QACrF,CAAC,CAAC;QAEF,MAAMkB,OAAO,CAACC,GAAG,CAACR,cAAc,CAAC;QACjC,IAAI,CAACS,KAAK,CAAC,oBAAoB,CAAC;QAChCC,KAAK,CAAC,gBAAgB,IAAI,CAACpB,UAAU,OAAO,IAAI,CAACC,QAAQ,gBAAgB,IAAI,CAACC,OAAO,CAACmB,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACnB,EAAC,KAAM,IAAI,CAACJ,cAAc,CAAC,CAACL,IAAI,EAAE,CAAC;MACvI,EAAE,OAAO6B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDH,KAAK,CAAC,6BAA4B,GAAIG,KAAK,CAACE,OAAO,CAAC;MACtD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}