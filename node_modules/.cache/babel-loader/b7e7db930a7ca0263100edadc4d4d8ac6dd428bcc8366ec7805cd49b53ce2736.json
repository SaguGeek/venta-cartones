{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelCheckbox as _vModelCheckbox, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"bg-white p-6 rounded-lg shadow-md\"\n};\nconst _hoisted_2 = {\n  class: \"mb-4\"\n};\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = {\n  class: \"mb-4\"\n};\nconst _hoisted_5 = {\n  class: \"mt-2 space-y-2\"\n};\nconst _hoisted_6 = [\"value\"];\nconst _hoisted_7 = [\"disabled\"];\nconst _hoisted_8 = {\n  key: 0,\n  class: \"text-yellow-600 mt-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", {\n    class: \"text-2xl font-semibold text-gray-800 mb-4\"\n  }, \"Asignar Cartones por Lote\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.assignCartons && $options.assignCartons(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"seller\",\n    class: \"block text-sm font-medium text-gray-700\"\n  }, \"Seleccionar Vendedor\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedSeller = $event),\n    id: \"seller\",\n    class: \"mt-1 block w-full border-gray-300 rounded-md shadow-sm\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.sellers, seller => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: seller.id,\n      value: seller.id\n    }, _toDisplayString(seller.nombre || seller.id), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedSeller]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    class: \"block text-sm font-medium text-gray-700\"\n  }, \"Seleccionar Cartones\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.availableCartons, carton => {\n    return _openBlock(), _createElementBlock(\"label\", {\n      key: carton.id,\n      class: \"flex items-center\"\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedCartons = $event),\n      value: carton.id,\n      class: \"mr-2\"\n    }, null, 8 /* PROPS */, _hoisted_6), [[_vModelCheckbox, $data.selectedCartons]]), _createTextVNode(\" \" + _toDisplayString(carton.serial), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 transition\",\n    disabled: !$data.selectedSeller || $data.selectedCartons.length === 0\n  }, \" Asignar Seleccionados \", 8 /* PROPS */, _hoisted_7), !$data.selectedSeller || $data.selectedCartons.length === 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \"Por favor, selecciona un vendedor y al menos un cartón.\")) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","assignCartons","_hoisted_2","for","$event","$data","selectedSeller","id","_Fragment","_renderList","sellers","seller","value","nombre","_hoisted_3","_hoisted_4","_hoisted_5","availableCartons","carton","type","selectedCartons","_hoisted_6","_createTextVNode","_toDisplayString","serial","disabled","length","_hoisted_7","_hoisted_8","_createCommentVNode"],"sources":["D:\\Lotweb\\venta-cartones\\src\\components\\AssignCartons.vue"],"sourcesContent":["```vue\r\n   <template>\r\n     <div class=\"bg-white p-6 rounded-lg shadow-md\">\r\n       <h2 class=\"text-2xl font-semibold text-gray-800 mb-4\">Asignar Cartones por Lote</h2>\r\n       <form @submit.prevent=\"assignCartons\">\r\n         <div class=\"mb-4\">\r\n           <label for=\"seller\" class=\"block text-sm font-medium text-gray-700\">Seleccionar Vendedor</label>\r\n           <select v-model=\"selectedSeller\" id=\"seller\" class=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm\">\r\n             <option v-for=\"seller in sellers\" :key=\"seller.id\" :value=\"seller.id\">{{ seller.nombre || seller.id }}</option>\r\n           </select>\r\n         </div>\r\n         <div class=\"mb-4\">\r\n           <label class=\"block text-sm font-medium text-gray-700\">Seleccionar Cartones</label>\r\n           <div class=\"mt-2 space-y-2\">\r\n             <label v-for=\"carton in availableCartons\" :key=\"carton.id\" class=\"flex items-center\">\r\n               <input type=\"checkbox\" v-model=\"selectedCartons\" :value=\"carton.id\" class=\"mr-2\">\r\n               {{ carton.serial }}\r\n             </label>\r\n           </div>\r\n         </div>\r\n         <button type=\"submit\" class=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 transition\" :disabled=\"!selectedSeller || selectedCartons.length === 0\">\r\n           Asignar Seleccionados\r\n         </button>\r\n         <p v-if=\"!selectedSeller || selectedCartons.length === 0\" class=\"text-yellow-600 mt-2\">Por favor, selecciona un vendedor y al menos un cartón.</p>\r\n       </form>\r\n     </div>\r\n   </template>\r\n\r\n   <script>\r\n   import { db } from '../firebase';\r\n   import { collection, query, where, getDocs, doc, updateDoc } from 'firebase/firestore';\r\n\r\n   export default {\r\n     data() {\r\n       return {\r\n         sellers: [],\r\n         availableCartons: [],\r\n         selectedSeller: null,\r\n         selectedCartons: []\r\n       };\r\n     },\r\n     async mounted() {\r\n       await this.loadSellers();\r\n       await this.loadAvailableCartons();\r\n     },\r\n     methods: {\r\n       async loadSellers() {\r\n         try {\r\n           console.log('Cargando vendedores...');\r\n           const querySnapshot = await getDocs(collection(db, 'vendedores'));\r\n           this.sellers = querySnapshot.docs.map(docSnapshot => {\r\n             const data = docSnapshot.data();\r\n             return {\r\n               id: docSnapshot.id,\r\n               ...data,\r\n               vendedorId: data.vendedorId || docSnapshot.id\r\n             };\r\n           });\r\n           console.log('Vendedores cargados:', this.sellers);\r\n         } catch (error) {\r\n           console.error('Error al cargar los vendedores:', error);\r\n         }\r\n       },\r\n       async loadAvailableCartons() {\r\n         try {\r\n           console.log('Cargando cartones disponibles...');\r\n           const q = query(\r\n             collection(db, 'cartones'),\r\n             where('vendedorId', '==', null),\r\n             where('estado', '==', 'disponible')\r\n           );\r\n           const querySnapshot = await getDocs(q);\r\n           this.availableCartons = querySnapshot.docs.map(doc => ({\r\n             id: doc.id,\r\n             serial: doc.data().serial\r\n           }));\r\n           console.log('Cartones disponibles:', this.availableCartons);\r\n         } catch (error) {\r\n           console.error('Error al cargar cartones disponibles:', error);\r\n         }\r\n       },\r\n       async assignCartons() {\r\n         if (!this.selectedSeller || this.selectedCartons.length === 0) return;\r\n\r\n         try {\r\n           console.log('Asignando cartones a vendedor:', this.selectedSeller, 'Cartones:', this.selectedCartons);\r\n           const batch = [];\r\n           for (const cartonId of this.selectedCartons) {\r\n             const cartonRef = doc(db, 'cartones', cartonId);\r\n             batch.push(updateDoc(cartonRef, {\r\n               vendedorId: this.selectedSeller,\r\n               estado: 'asignado' // Actualizar estado a \"asignado\"\r\n             }));\r\n           }\r\n           await Promise.all(batch);\r\n           console.log('Cartones asignados exitosamente');\r\n           alert('Cartones asignados exitosamente');\r\n           this.selectedCartons = [];\r\n           await this.loadAvailableCartons(); // Recargar cartones disponibles\r\n         } catch (error) {\r\n           console.error('Error al asignar cartones:', error);\r\n           alert('Error al asignar cartones: ' + error.message);\r\n         }\r\n       }\r\n     }\r\n   };\r\n   </script>\r\n\r\n   <style scoped>\r\n   /* Tailwind maneja los estilos */\r\n   </style>\r\n   ```"],"mappings":";;EAEUA,KAAK,EAAC;AAAmC;;EAGrCA,KAAK,EAAC;AAAM;mBAL1B;;EAWcA,KAAK,EAAC;AAAM;;EAEVA,KAAK,EAAC;AAAgB;mBAbtC;mBAAA;;EAAAC,GAAA;EAuBmED,KAAK,EAAC;;;uBArBpEE,mBAAA,CAuBM,OAvBNC,UAuBM,G,0BAtBJC,mBAAA,CAAoF;IAAhFJ,KAAK,EAAC;EAA2C,GAAC,2BAAyB,sBAC/EI,mBAAA,CAoBO;IApBAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAJpBC,cAAA,KAAAC,IAAA,KAI8BC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;MAClCJ,mBAAA,CAKM,OALNO,UAKM,G,0BAJJP,mBAAA,CAAgG;IAAzFQ,GAAG,EAAC,QAAQ;IAACZ,KAAK,EAAC;KAA0C,sBAAoB,sB,gBACxFI,mBAAA,CAES;IATpB,uBAAAE,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAO4BC,KAAA,CAAAC,cAAc,GAAAF,MAAA;IAAEG,EAAE,EAAC,QAAQ;IAAChB,KAAK,EAAC;yBACjDE,mBAAA,CAA+Ge,SAAA,QAR5HC,WAAA,CAQsCJ,KAAA,CAAAK,OAAO,EAAjBC,MAAM;yBAArBlB,mBAAA,CAA+G;MAA5ED,GAAG,EAAEmB,MAAM,CAACJ,EAAE;MAAGK,KAAK,EAAED,MAAM,CAACJ;wBAAOI,MAAM,CAACE,MAAM,IAAIF,MAAM,CAACJ,EAAE,wBARhHO,UAAA;2EAO4BT,KAAA,CAAAC,cAAc,E,KAIjCX,mBAAA,CAQM,OARNoB,UAQM,G,0BAPJpB,mBAAA,CAAmF;IAA5EJ,KAAK,EAAC;EAAyC,GAAC,sBAAoB,sBAC3EI,mBAAA,CAKM,OALNqB,UAKM,I,kBAJJvB,mBAAA,CAGQe,SAAA,QAjBrBC,WAAA,CAcqCJ,KAAA,CAAAY,gBAAgB,EAA1BC,MAAM;yBAApBzB,mBAAA,CAGQ;MAHmCD,GAAG,EAAE0B,MAAM,CAACX,EAAE;MAAEhB,KAAK,EAAC;wBAC/DI,mBAAA,CAAiF;MAA1EwB,IAAI,EAAC,UAAU;MAfrC,uBAAAtB,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAe+CC,KAAA,CAAAe,eAAe,GAAAhB,MAAA;MAAGQ,KAAK,EAAEM,MAAM,CAACX,EAAE;MAAEhB,KAAK,EAAC;4BAfzF8B,UAAA,I,kBAe+ChB,KAAA,CAAAe,eAAe,E,GAf9DE,gBAAA,CAegG,GACjF,GAAAC,gBAAA,CAAGL,MAAM,CAACM,MAAM,iB;sCAItB7B,mBAAA,CAES;IAFDwB,IAAI,EAAC,QAAQ;IAAC5B,KAAK,EAAC,0EAA0E;IAAEkC,QAAQ,GAAGpB,KAAA,CAAAC,cAAc,IAAID,KAAA,CAAAe,eAAe,CAACM,MAAM;KAAQ,yBAEnK,iBAtBTC,UAAA,G,CAuBmBtB,KAAA,CAAAC,cAAc,IAAID,KAAA,CAAAe,eAAe,CAACM,MAAM,U,cAAlDjC,mBAAA,CAAkJ,KAAlJmC,UAAkJ,EAA3D,yDAAuD,KAvBvJC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}