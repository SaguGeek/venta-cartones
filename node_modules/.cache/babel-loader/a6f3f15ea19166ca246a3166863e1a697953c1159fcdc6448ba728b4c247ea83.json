{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { db } from '../firebase';\nimport { collection, query, where, getDocs } from 'firebase/firestore';\nimport { updateDoc, doc } from 'firebase/firestore';\nexport default {\n  name: 'AssignCartons',\n  props: {\n    cartonesAsignados: Function\n  },\n  data() {\n    return {\n      selectedSeller: '',\n      rangeStart: '',\n      rangeEnd: '',\n      sellers: [],\n      availableSerials: []\n    };\n  },\n  async created() {\n    await this.loadSellers();\n    await this.loadAvailableCartons();\n  },\n  methods: {\n    async loadSellers() {\n      // Simulación de carga de vendedores desde Firestore (ajusta según tu estructura)\n      try {\n        const sellersRef = collection(db, 'vendedores');\n        const querySnapshot = await getDocs(sellersRef);\n        this.sellers = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          name: doc.data().name || `Vendedor ${doc.id}`\n        }));\n      } catch (error) {\n        console.error('Error al cargar vendedores:', error);\n      }\n    },\n    async loadAvailableCartons() {\n      try {\n        const cartonesRef = collection(db, 'cartones');\n        const q = query(cartonesRef, where('estado', '==', 'disponible'));\n        const querySnapshot = await getDocs(q);\n        this.availableSerials = querySnapshot.docs.map(doc => doc.data().serial).sort((a, b) => a - b); // Ordenar seriales numéricamente\n      } catch (error) {\n        console.error('Error al cargar cartones disponibles:', error);\n      }\n    },\n    async assignCartons() {\n      try {\n        const cartonesRef = collection(db, 'cartones');\n        const q = query(cartonesRef, where('estado', '==', 'disponible'), where('serial', '>=', this.rangeStart), where('serial', '<=', this.rangeEnd));\n        const querySnapshot = await getDocs(q);\n        const updatePromises = querySnapshot.docs.map(async docSnapshot => {\n          const cartonRef = doc(db, 'cartones', docSnapshot.id);\n          await updateDoc(cartonRef, {\n            estado: 'asignado',\n            vendedorId: this.selectedSeller === 'all' ? null : this.selectedSeller\n          });\n        });\n        await Promise.all(updatePromises);\n        this.$emit('cartones-asignados');\n        const action = this.selectedSeller === 'all' ? 'liberados' : 'asignados';\n        alert(`Cartones del ${this.rangeStart} al ${this.rangeEnd} ${action} exitosamente`);\n        this.rangeStart = '';\n        this.rangeEnd = '';\n      } catch (error) {\n        console.error('Error al asignar cartones:', error);\n        alert('Error al asignar cartones: ' + error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["db","collection","query","where","getDocs","updateDoc","doc","name","props","cartonesAsignados","Function","data","selectedSeller","rangeStart","rangeEnd","sellers","availableSerials","created","loadSellers","loadAvailableCartons","methods","sellersRef","querySnapshot","docs","map","id","error","console","cartonesRef","q","serial","sort","a","b","assignCartons","updatePromises","docSnapshot","cartonRef","estado","vendedorId","Promise","all","$emit","action","alert","message"],"sources":["D:\\Lotweb\\venta-cartones\\src\\components\\AssignCartons.vue"],"sourcesContent":["```vue\r\n<template>\r\n  <div class=\"space-y-4\">\r\n    <!-- Selección de Vendedor -->\r\n    <div>\r\n      <label for=\"seller\" class=\"block text-sm font-medium text-gray-700\">Seleccionar Vendedor</label>\r\n      <select\r\n        id=\"seller\"\r\n        v-model=\"selectedSeller\"\r\n        class=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-lg shadow-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-300\"\r\n      >\r\n        <option value=\"\" disabled>Elige un vendedor</option>\r\n        <option value=\"all\">Todos</option>\r\n        <option v-for=\"seller in sellers\" :key=\"seller.id\" :value=\"seller.id\">{{ seller.name }}</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- Rango de Cartones Disponibles -->\r\n    <div>\r\n      <label class=\"block text-sm font-medium text-gray-700\">Rango de Cartones Disponibles</label>\r\n      <div class=\"flex space-x-4 mt-1\">\r\n        <select\r\n          v-model=\"rangeStart\"\r\n          class=\"w-1/2 px-4 py-2 border border-gray-300 rounded-lg shadow-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-300\"\r\n        >\r\n          <option value=\"\" disabled>Desde</option>\r\n          <option v-for=\"serial in availableSerials\" :key=\"serial\" :value=\"serial\">{{ serial }}</option>\r\n        </select>\r\n        <select\r\n          v-model=\"rangeEnd\"\r\n          class=\"w-1/2 px-4 py-2 border border-gray-300 rounded-lg shadow-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-300\"\r\n        >\r\n          <option value=\"\" disabled>Hasta</option>\r\n          <option v-for=\"serial in availableSerials\" :key=\"serial\" :value=\"serial\">{{ serial }}</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Miniaturas de Cartones en Pantallas Pequeñas -->\r\n    <div class=\"hidden sm:grid sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 mt-4\">\r\n      <div v-for=\"serial in availableSerials\" :key=\"serial\" class=\"bg-white p-2 rounded-lg shadow-md hover:shadow-lg transition duration-300\">\r\n        <div class=\"text-center text-gray-800 font-medium\">{{ serial }}</div>\r\n        <div class=\"h-24 bg-gray-200 rounded flex items-center justify-center text-gray-500\">Imagen Placeholder</div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Botón de Asignar -->\r\n    <button\r\n      @click=\"assignCartons\"\r\n      :disabled=\"!selectedSeller || !rangeStart || !rangeEnd || rangeStart > rangeEnd\"\r\n      class=\"w-full bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-opacity-50 transition duration-300\"\r\n    >\r\n      Asignar Cartones\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { db } from '../firebase';\r\nimport { collection, query, where, getDocs } from 'firebase/firestore';\r\nimport { updateDoc, doc } from 'firebase/firestore';\r\n\r\nexport default {\r\n  name: 'AssignCartons',\r\n  props: {\r\n    cartonesAsignados: Function\r\n  },\r\n  data() {\r\n    return {\r\n      selectedSeller: '',\r\n      rangeStart: '',\r\n      rangeEnd: '',\r\n      sellers: [],\r\n      availableSerials: []\r\n    };\r\n  },\r\n  async created() {\r\n    await this.loadSellers();\r\n    await this.loadAvailableCartons();\r\n  },\r\n  methods: {\r\n    async loadSellers() {\r\n      // Simulación de carga de vendedores desde Firestore (ajusta según tu estructura)\r\n      try {\r\n        const sellersRef = collection(db, 'vendedores');\r\n        const querySnapshot = await getDocs(sellersRef);\r\n        this.sellers = querySnapshot.docs.map(doc => ({ id: doc.id, name: doc.data().name || `Vendedor ${doc.id}` }));\r\n      } catch (error) {\r\n        console.error('Error al cargar vendedores:', error);\r\n      }\r\n    },\r\n    async loadAvailableCartons() {\r\n      try {\r\n        const cartonesRef = collection(db, 'cartones');\r\n        const q = query(cartonesRef, where('estado', '==', 'disponible'));\r\n        const querySnapshot = await getDocs(q);\r\n        this.availableSerials = querySnapshot.docs\r\n          .map(doc => doc.data().serial)\r\n          .sort((a, b) => a - b); // Ordenar seriales numéricamente\r\n      } catch (error) {\r\n        console.error('Error al cargar cartones disponibles:', error);\r\n      }\r\n    },\r\n    async assignCartons() {\r\n      try {\r\n        const cartonesRef = collection(db, 'cartones');\r\n        const q = query(cartonesRef, where('estado', '==', 'disponible'), where('serial', '>=', this.rangeStart), where('serial', '<=', this.rangeEnd));\r\n        const querySnapshot = await getDocs(q);\r\n\r\n        const updatePromises = querySnapshot.docs.map(async (docSnapshot) => {\r\n          const cartonRef = doc(db, 'cartones', docSnapshot.id);\r\n          await updateDoc(cartonRef, {\r\n            estado: 'asignado',\r\n            vendedorId: this.selectedSeller === 'all' ? null : this.selectedSeller\r\n          });\r\n        });\r\n\r\n        await Promise.all(updatePromises);\r\n        this.$emit('cartones-asignados');\r\n        const action = this.selectedSeller === 'all' ? 'liberados' : 'asignados';\r\n        alert(`Cartones del ${this.rangeStart} al ${this.rangeEnd} ${action} exitosamente`);\r\n        this.rangeStart = '';\r\n        this.rangeEnd = '';\r\n      } catch (error) {\r\n        console.error('Error al asignar cartones:', error);\r\n        alert('Error al asignar cartones: ' + error.message);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Estilos para la galería en pantallas pequeñas */\r\n@media (max-width: 640px) {\r\n  .hidden {\r\n    display: grid;\r\n  }\r\n}\r\n</style>\r\n```"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}