{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { db } from '../firebase';\nimport { collection, query, where, getDocs, doc, updateDoc, addDoc } from 'firebase/firestore';\nimport { auth } from '../firebase';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nexport default {\n  data() {\n    return {\n      sellers: [],\n      selectedSeller: null,\n      assignedCartons: [],\n      soldCartons: [],\n      availableCartons: [],\n      loading: false,\n      showAddModal: false,\n      newSellerEmail: '',\n      newSellerPassword: '',\n      newSellerUsername: ''\n    };\n  },\n  async mounted() {\n    await this.loadSellers();\n  },\n  methods: {\n    async loadSellers() {\n      this.loading = true;\n      try {\n        console.log('Cargando vendedores...');\n        const querySnapshot = await getDocs(collection(db, 'vendedores'));\n        this.sellers = await Promise.all(querySnapshot.docs.map(async docSnapshot => {\n          const data = docSnapshot.data();\n          console.log('Vendedor cargado (ID: ', docSnapshot.id, '):', data);\n          const sellerData = {\n            id: docSnapshot.id,\n            ...data,\n            vendedorId: data.vendedorId || docSnapshot.id\n          };\n          const assignedQuery = query(collection(db, 'cartones'), where('vendedorId', '==', sellerData.id), where('estado', '==', 'asignado'));\n          const assignedSnapshot = await getDocs(assignedQuery);\n          sellerData.assignedCartons = assignedSnapshot.size;\n          return sellerData;\n        }));\n        console.log('Vendedores cargados con estadísticas:', this.sellers);\n      } catch (error) {\n        console.error('Error al cargar los vendedores:', error);\n        alert('Error al cargar vendedores: ' + error.message);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async showSellerDetails(seller) {\n      console.log('Mostrando detalles del vendedor:', seller);\n      this.selectedSeller = seller;\n      if (!seller.vendedorId) {\n        console.error('Error: vendedorId no está definido para este vendedor:', seller);\n        this.assignedCartons = [];\n        this.soldCartons = [];\n        this.availableCartons = [];\n        return;\n      }\n      await this.loadSellerCartons(seller.vendedorId);\n    },\n    async loadSellerCartons(vendedorId) {\n      try {\n        console.log(`Cargando cartones para el vendedor ${vendedorId}...`);\n        const assignedQuery = query(collection(db, 'cartones'), where('vendedorId', '==', vendedorId), where('estado', '==', 'asignado'));\n        const assignedSnapshot = await getDocs(assignedQuery);\n        this.assignedCartons = assignedSnapshot.docs.map(doc => {\n          const data = doc.data();\n          console.log(`Cartón asignado encontrado (ID: ${doc.id}):`, data);\n          return {\n            id: doc.id,\n            serial: data.serial\n          };\n        });\n        this.assignedCartons.sort((a, b) => {\n          const serialA = parseInt(a.serial.replace('LM', ''), 10);\n          const serialB = parseInt(b.serial.replace('LM', ''), 10);\n          return serialA - serialB;\n        });\n        console.log('Cartones asignados:', this.assignedCartons);\n        const soldQuery = query(collection(db, 'cartones'), where('vendedorId', '==', vendedorId), where('estado', '==', 'vendido'));\n        const soldSnapshot = await getDocs(soldQuery);\n        this.soldCartons = soldSnapshot.docs.map(doc => ({\n          id: doc.id,\n          serial: doc.data().serial\n        }));\n        this.soldCartons.sort((a, b) => {\n          const serialA = parseInt(a.serial.replace('LM', ''), 10);\n          const serialB = parseInt(b.serial.replace('LM', ''), 10);\n          return serialA - serialB;\n        });\n        console.log('Cartones vendidos:', this.soldCartons);\n        const availableQuery = query(collection(db, 'cartones'), where('vendedorId', '==', null), where('estado', '==', 'disponible'));\n        const availableSnapshot = await getDocs(availableQuery);\n        this.availableCartons = availableSnapshot.docs.map(doc => ({\n          id: doc.id,\n          serial: doc.data().serial\n        }));\n        this.availableCartons.sort((a, b) => {\n          const serialA = parseInt(a.serial.replace('LM', ''), 10);\n          const serialB = parseInt(b.serial.replace('LM', ''), 10);\n          return serialA - serialB;\n        });\n        console.log('Cartones disponibles (global):', this.availableCartons);\n      } catch (error) {\n        console.error('Error al cargar los cartones del vendedor:', error);\n        this.assignedCartons = [];\n        this.soldCartons = [];\n        this.availableCartons = [];\n      }\n    },\n    async sellCarton(cartonId) {\n      try {\n        console.log(`Vendiendo cartón ${cartonId} para el vendedor ${this.selectedSeller.vendedorId}...`);\n        const cartonRef = doc(db, 'cartones', cartonId);\n        await updateDoc(cartonRef, {\n          estado: 'vendido'\n        });\n        const sellerRef = doc(db, 'vendedores', this.selectedSeller.id);\n        const currentSaldo = this.selectedSeller.saldoGenerado || 0;\n        await updateDoc(sellerRef, {\n          saldoGenerado: currentSaldo + 5\n        });\n        console.log(`Cartón ${cartonId} marcado como vendido`);\n        alert(`Cartón ${cartonId} vendido exitosamente`);\n        this.selectedSeller.saldoGenerado = currentSaldo + 5;\n        await this.loadSellerCartons(this.selectedSeller.vendedorId);\n      } catch (error) {\n        console.error('Error al vender el cartón:', error);\n        alert('Error al vender el cartón: ' + error.message);\n      }\n    },\n    async addSeller() {\n      if (!this.newSellerEmail || !this.newSellerPassword || !this.newSellerUsername) {\n        alert('Por favor, complete todos los campos: Correo, Clave y Nombre de Usuario.');\n        return;\n      }\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, this.newSellerEmail, this.newSellerPassword);\n        const user = userCredential.user;\n        await setDoc(doc(db, 'vendedores', user.uid), {\n          email: this.newSellerEmail,\n          nombre: this.newSellerUsername,\n          saldoGenerado: 0\n        });\n        console.log('Vendedor agregado exitosamente');\n        alert('Vendedor agregado exitosamente');\n        this.newSellerEmail = '';\n        this.newSellerPassword = '';\n        this.newSellerUsername = '';\n        this.showAddModal = false;\n        await this.loadSellers();\n      } catch (error) {\n        console.error('Error al agregar vendedor:', error);\n        alert('Error al agregar vendedor: ' + error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["db","collection","query","where","getDocs","doc","updateDoc","addDoc","auth","createUserWithEmailAndPassword","data","sellers","selectedSeller","assignedCartons","soldCartons","availableCartons","loading","showAddModal","newSellerEmail","newSellerPassword","newSellerUsername","mounted","loadSellers","methods","console","log","querySnapshot","Promise","all","docs","map","docSnapshot","id","sellerData","vendedorId","assignedQuery","assignedSnapshot","size","error","alert","message","showSellerDetails","seller","loadSellerCartons","serial","sort","a","b","serialA","parseInt","replace","serialB","soldQuery","soldSnapshot","availableQuery","availableSnapshot","sellCarton","cartonId","cartonRef","estado","sellerRef","currentSaldo","saldoGenerado","addSeller","userCredential","user","setDoc","uid","email","nombre"],"sources":["D:\\Lotweb\\venta-cartones\\src\\components\\SellerList.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-white p-6 rounded-lg shadow-md\">\r\n    <div class=\"flex justify-between items-center mb-4\">\r\n      <h2 class=\"text-xl font-semibold text-gray-800\">Lista de Vendedores</h2>\r\n      <button\r\n        @click=\"showAddModal = true\"\r\n        class=\"bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 transition\"\r\n      >\r\n        Agregar Vendedor\r\n      </button>\r\n    </div>\r\n    <div v-if=\"loading\" class=\"text-center text-gray-600\">Cargando vendedores...</div>\r\n    <div v-else-if=\"sellers.length === 0\" class=\"text-gray-600\">No hay vendedores registrados.</div>\r\n    <div v-else class=\"space-y-4\">\r\n      <div v-for=\"seller in sellers\" :key=\"seller.id\" class=\"border p-4 rounded-md flex justify-between items-center\">\r\n        <div>\r\n          <p class=\"text-lg font-medium text-gray-700\">{{ seller.nombre || seller.id || 'Sin nombre' }}</p>\r\n          <p class=\"text-sm text-gray-500\">Saldo Generado: ${{ seller.saldoGenerado || 0 }}</p>\r\n          <p class=\"text-sm text-gray-500\">Cartones Asignados: {{ seller.assignedCartons }}</p>\r\n        </div>\r\n        <button\r\n          @click=\"showSellerDetails(seller)\"\r\n          class=\"bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 transition\"\r\n        >\r\n          Ver Detalles\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal para mostrar detalles del vendedor -->\r\n    <div v-if=\"selectedSeller\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n      <div class=\"bg-white p-6 rounded-lg shadow-lg max-w-md w-full\">\r\n        <h3 class=\"text-xl font-semibold text-gray-800 mb-4\">{{ selectedSeller.nombre || selectedSeller.id || 'Sin nombre' }}</h3>\r\n        <div class=\"space-y-2\">\r\n          <p><strong>Cartones Asignados:</strong> {{ assignedCartons.length }}</p>\r\n          <p v-if=\"assignedCartons.length === 0\">No hay cartones asignados.</p>\r\n          <div v-else>\r\n            <ul class=\"list-disc pl-5\">\r\n              <li v-for=\"carton in assignedCartons\" :key=\"carton.id\">\r\n                {{ carton.serial }}\r\n                <button\r\n                  @click=\"sellCarton(carton.id)\"\r\n                  class=\"ml-2 bg-green-500 text-white px-2 py-1 rounded-md hover:bg-green-600 transition\"\r\n                >\r\n                  Vender\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <p><strong>Cartones Vendidos:</strong> {{ soldCartons.length }}</p>\r\n          <p><strong>Cartones Disponibles (Global):</strong> {{ availableCartons.length }}</p>\r\n          <p><strong>Saldo Generado:</strong> ${{ selectedSeller.saldoGenerado || 0 }}</p>\r\n        </div>\r\n        <button\r\n          @click=\"selectedSeller = null\"\r\n          class=\"bg-indigo-600 text-white px-4 py-2 rounded-md mt-4 hover:bg-indigo-700 transition\"\r\n        >\r\n          Cerrar\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal para Agregar Vendedor -->\r\n    <div v-if=\"showAddModal\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div class=\"bg-white p-6 rounded-lg shadow-lg max-w-md w-full\">\r\n        <h3 class=\"text-xl font-semibold text-gray-800 mb-4\">Agregar Nuevo Vendedor</h3>\r\n        <form @submit.prevent=\"addSeller\" class=\"space-y-4\">\r\n          <div>\r\n            <label for=\"sellerEmail\" class=\"block text-sm font-medium text-gray-700\">Correo</label>\r\n            <input\r\n              v-model=\"newSellerEmail\"\r\n              id=\"sellerEmail\"\r\n              type=\"email\"\r\n              required\r\n              class=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-lg shadow-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-300\"\r\n              placeholder=\"vendedor1@example.com\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label for=\"sellerPassword\" class=\"block text-sm font-medium text-gray-700\">Clave</label>\r\n            <input\r\n              v-model=\"newSellerPassword\"\r\n              id=\"sellerPassword\"\r\n              type=\"password\"\r\n              required\r\n              class=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-lg shadow-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-300\"\r\n              placeholder=\"Ingrese la clave\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label for=\"sellerUsername\" class=\"block text-sm font-medium text-gray-700\">Nombre de Usuario</label>\r\n            <input\r\n              v-model=\"newSellerUsername\"\r\n              id=\"sellerUsername\"\r\n              type=\"text\"\r\n              required\r\n              class=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-lg shadow-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-300\"\r\n              placeholder=\"Nombre del vendedor\"\r\n            />\r\n          </div>\r\n          <div class=\"flex justify-end space-x-4\">\r\n            <button\r\n              type=\"button\"\r\n              @click=\"showAddModal = false\"\r\n              class=\"bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-600 transition\"\r\n            >\r\n              Cancelar\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              class=\"bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 transition\"\r\n            >\r\n              Agregar\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { db } from '../firebase';\r\nimport { collection, query, where, getDocs, doc, updateDoc, addDoc } from 'firebase/firestore';\r\nimport { auth } from '../firebase';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      sellers: [],\r\n      selectedSeller: null,\r\n      assignedCartons: [],\r\n      soldCartons: [],\r\n      availableCartons: [],\r\n      loading: false,\r\n      showAddModal: false,\r\n      newSellerEmail: '',\r\n      newSellerPassword: '',\r\n      newSellerUsername: ''\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.loadSellers();\r\n  },\r\n  methods: {\r\n    async loadSellers() {\r\n      this.loading = true;\r\n      try {\r\n        console.log('Cargando vendedores...');\r\n        const querySnapshot = await getDocs(collection(db, 'vendedores'));\r\n        this.sellers = await Promise.all(querySnapshot.docs.map(async (docSnapshot) => {\r\n          const data = docSnapshot.data();\r\n          console.log('Vendedor cargado (ID: ', docSnapshot.id, '):', data);\r\n          const sellerData = {\r\n            id: docSnapshot.id,\r\n            ...data,\r\n            vendedorId: data.vendedorId || docSnapshot.id\r\n          };\r\n          const assignedQuery = query(\r\n            collection(db, 'cartones'),\r\n            where('vendedorId', '==', sellerData.id),\r\n            where('estado', '==', 'asignado')\r\n          );\r\n          const assignedSnapshot = await getDocs(assignedQuery);\r\n          sellerData.assignedCartons = assignedSnapshot.size;\r\n          return sellerData;\r\n        }));\r\n        console.log('Vendedores cargados con estadísticas:', this.sellers);\r\n      } catch (error) {\r\n        console.error('Error al cargar los vendedores:', error);\r\n        alert('Error al cargar vendedores: ' + error.message);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    async showSellerDetails(seller) {\r\n      console.log('Mostrando detalles del vendedor:', seller);\r\n      this.selectedSeller = seller;\r\n      if (!seller.vendedorId) {\r\n        console.error('Error: vendedorId no está definido para este vendedor:', seller);\r\n        this.assignedCartons = [];\r\n        this.soldCartons = [];\r\n        this.availableCartons = [];\r\n        return;\r\n      }\r\n      await this.loadSellerCartons(seller.vendedorId);\r\n    },\r\n    async loadSellerCartons(vendedorId) {\r\n      try {\r\n        console.log(`Cargando cartones para el vendedor ${vendedorId}...`);\r\n        const assignedQuery = query(\r\n          collection(db, 'cartones'),\r\n          where('vendedorId', '==', vendedorId),\r\n          where('estado', '==', 'asignado')\r\n        );\r\n        const assignedSnapshot = await getDocs(assignedQuery);\r\n        this.assignedCartons = assignedSnapshot.docs.map(doc => {\r\n          const data = doc.data();\r\n          console.log(`Cartón asignado encontrado (ID: ${doc.id}):`, data);\r\n          return {\r\n            id: doc.id,\r\n            serial: data.serial\r\n          };\r\n        });\r\n        this.assignedCartons.sort((a, b) => {\r\n          const serialA = parseInt(a.serial.replace('LM', ''), 10);\r\n          const serialB = parseInt(b.serial.replace('LM', ''), 10);\r\n          return serialA - serialB;\r\n        });\r\n        console.log('Cartones asignados:', this.assignedCartons);\r\n\r\n        const soldQuery = query(\r\n          collection(db, 'cartones'),\r\n          where('vendedorId', '==', vendedorId),\r\n          where('estado', '==', 'vendido')\r\n        );\r\n        const soldSnapshot = await getDocs(soldQuery);\r\n        this.soldCartons = soldSnapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          serial: doc.data().serial\r\n        }));\r\n        this.soldCartons.sort((a, b) => {\r\n          const serialA = parseInt(a.serial.replace('LM', ''), 10);\r\n          const serialB = parseInt(b.serial.replace('LM', ''), 10);\r\n          return serialA - serialB;\r\n        });\r\n        console.log('Cartones vendidos:', this.soldCartons);\r\n\r\n        const availableQuery = query(\r\n          collection(db, 'cartones'),\r\n          where('vendedorId', '==', null),\r\n          where('estado', '==', 'disponible')\r\n        );\r\n        const availableSnapshot = await getDocs(availableQuery);\r\n        this.availableCartons = availableSnapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          serial: doc.data().serial\r\n        }));\r\n        this.availableCartons.sort((a, b) => {\r\n          const serialA = parseInt(a.serial.replace('LM', ''), 10);\r\n          const serialB = parseInt(b.serial.replace('LM', ''), 10);\r\n          return serialA - serialB;\r\n        });\r\n        console.log('Cartones disponibles (global):', this.availableCartons);\r\n      } catch (error) {\r\n        console.error('Error al cargar los cartones del vendedor:', error);\r\n        this.assignedCartons = [];\r\n        this.soldCartons = [];\r\n        this.availableCartons = [];\r\n      }\r\n    },\r\n    async sellCarton(cartonId) {\r\n      try {\r\n        console.log(`Vendiendo cartón ${cartonId} para el vendedor ${this.selectedSeller.vendedorId}...`);\r\n        const cartonRef = doc(db, 'cartones', cartonId);\r\n        await updateDoc(cartonRef, {\r\n          estado: 'vendido'\r\n        });\r\n\r\n        const sellerRef = doc(db, 'vendedores', this.selectedSeller.id);\r\n        const currentSaldo = this.selectedSeller.saldoGenerado || 0;\r\n        await updateDoc(sellerRef, {\r\n          saldoGenerado: currentSaldo + 5\r\n        });\r\n\r\n        console.log(`Cartón ${cartonId} marcado como vendido`);\r\n        alert(`Cartón ${cartonId} vendido exitosamente`);\r\n\r\n        this.selectedSeller.saldoGenerado = currentSaldo + 5;\r\n        await this.loadSellerCartons(this.selectedSeller.vendedorId);\r\n      } catch (error) {\r\n        console.error('Error al vender el cartón:', error);\r\n        alert('Error al vender el cartón: ' + error.message);\r\n      }\r\n    },\r\n    async addSeller() {\r\n      if (!this.newSellerEmail || !this.newSellerPassword || !this.newSellerUsername) {\r\n        alert('Por favor, complete todos los campos: Correo, Clave y Nombre de Usuario.');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const userCredential = await createUserWithEmailAndPassword(auth, this.newSellerEmail, this.newSellerPassword);\r\n        const user = userCredential.user;\r\n        await setDoc(doc(db, 'vendedores', user.uid), {\r\n          email: this.newSellerEmail,\r\n          nombre: this.newSellerUsername,\r\n          saldoGenerado: 0\r\n        });\r\n        console.log('Vendedor agregado exitosamente');\r\n        alert('Vendedor agregado exitosamente');\r\n        this.newSellerEmail = '';\r\n        this.newSellerPassword = '';\r\n        this.newSellerUsername = '';\r\n        this.showAddModal = false;\r\n        await this.loadSellers();\r\n      } catch (error) {\r\n        console.error('Error al agregar vendedor:', error);\r\n        alert('Error al agregar vendedor: ' + error.message);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Tailwind maneja los estilos */\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}