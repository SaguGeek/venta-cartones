{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"href\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"Subir Cartón\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.onFileChange && $options.onFileChange(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.uploadImage && $options.uploadImage(...args))\n  }, \"Subir Imagen\"), $data.imageUrl ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, [_cache[2] || (_cache[2] = _createTextVNode(\"Imagen subida: \")), _createElementVNode(\"a\", {\n    href: $data.imageUrl,\n    target: \"_blank\"\n  }, _toDisplayString($data.imageUrl), 9 /* TEXT, PROPS */, _hoisted_2)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","type","onChange","_cache","args","$options","onFileChange","accept","onClick","uploadImage","$data","imageUrl","_hoisted_1","_createTextVNode","href","target","_hoisted_2","_createCommentVNode"],"sources":["D:\\Lotweb\\venta-cartones\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Subir Cartón</h2>\n    <input type=\"file\" @change=\"onFileChange\" accept=\"image/*\" />\n    <button @click=\"uploadImage\">Subir Imagen</button>\n    <p v-if=\"imageUrl\">Imagen subida: <a :href=\"imageUrl\" target=\"_blank\">{{ imageUrl }}</a></p>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      selectedFile: null,\n      imageUrl: null,\n      cloudinaryUrl: 'https://api.cloudinary.com/v1_1/dardyvsja/image/upload', // Usa tu Cloud Name\n      uploadPreset: 'cartones_upload' // Reemplaza con el nombre exacto de tu Upload Preset\n    };\n  },\n  methods: {\n    onFileChange(event) {\n      this.selectedFile = event.target.files[0];\n    },\n    async uploadImage() {\n      if (!this.selectedFile) {\n        alert('Por favor, selecciona una imagen.');\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n      formData.append('upload_preset', this.uploadPreset);\n\n      try {\n        const response = await fetch(this.cloudinaryUrl, {\n          method: 'POST',\n          body: formData\n        });\n        const data = await response.json();\n        if (data.secure_url) {\n          this.imageUrl = data.secure_url;\n          console.log('Imagen subida:', this.imageUrl);\n          this.$emit('image-uploaded', {\n            serial: `LM${Math.floor(Math.random() * 10000).toString().padStart(4, '0')}`,\n            imageUrl: this.imageUrl\n          });\n        } else {\n          alert('Error al subir la imagen: ' + JSON.stringify(data));\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        alert('Error al subir la imagen: ' + error.message);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\ndiv {\n  margin: 20px;\n}\ninput, button {\n  margin: 10px 0;\n}\n</style>"],"mappings":";;EAAAA,GAAA;AAAA;mBAAA;;uBACEC,mBAAA,CAKM,c,0BAJJC,mBAAA,CAAqB,YAAjB,cAAY,sBAChBA,mBAAA,CAA6D;IAAtDC,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IAAEG,MAAM,EAAC;qCACjDP,mBAAA,CAAkD;IAAzCQ,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAI,WAAA,IAAAJ,QAAA,CAAAI,WAAA,IAAAL,IAAA,CAAW;KAAE,cAAY,GAChCM,KAAA,CAAAC,QAAQ,I,cAAjBZ,mBAAA,CAA4F,KALhGa,UAAA,G,0BAAAC,gBAAA,CAKuB,iBAAe,IAAAb,mBAAA,CAAsD;IAAlDc,IAAI,EAAEJ,KAAA,CAAAC,QAAQ;IAAEI,MAAM,EAAC;sBAAYL,KAAA,CAAAC,QAAQ,wBALrFK,UAAA,E,KAAAC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}