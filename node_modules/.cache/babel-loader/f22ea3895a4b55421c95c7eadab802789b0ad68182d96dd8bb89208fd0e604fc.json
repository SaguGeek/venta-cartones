{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { db } from '../firebase';\nimport { collection, getDocs } from 'firebase/firestore';\nexport default {\n  data() {\n    return {\n      cartones: [],\n      selectedCarton: null,\n      availableCartons: 0,\n      soldCartons: 0,\n      sellerCount: 0\n    };\n  },\n  async mounted() {\n    await this.loadCartones();\n    await this.loadSellers();\n  },\n  methods: {\n    async loadCartones() {\n      try {\n        const querySnapshot = await getDocs(collection(db, 'cartones'));\n        this.cartones = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        this.availableCartons = this.cartones.filter(c => c.estado === 'disponible').length;\n        this.soldCartons = this.cartones.filter(c => c.estado === 'vendido').length;\n        console.log('Cartones cargados:', this.cartones);\n      } catch (error) {\n        console.error('Error al cargar los cartones:', error);\n        alert('Error al cargar los cartones: ' + error.message);\n      }\n    },\n    async loadSellers() {\n      try {\n        const querySnapshot = await getDocs(collection(db, 'vendedores'));\n        this.sellerCount = querySnapshot.docs.length;\n      } catch (error) {\n        console.error('Error al cargar los vendedores:', error);\n        alert('Error al cargar los vendedores: ' + error.message);\n      }\n    },\n    openModal(carton) {\n      this.selectedCarton = carton;\n    },\n    closeModal() {\n      this.selectedCarton = null;\n    }\n  }\n};","map":{"version":3,"names":["db","collection","getDocs","data","cartones","selectedCarton","availableCartons","soldCartons","sellerCount","mounted","loadCartones","loadSellers","methods","querySnapshot","docs","map","doc","id","filter","c","estado","length","console","log","error","alert","message","openModal","carton","closeModal"],"sources":["D:\\Lotweb\\venta-cartones\\src\\components\\CartonList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2 class=\"text-2xl font-semibold text-gray-800 mb-4\">Lista de Cartones</h2>\r\n    <!-- Estadísticas -->\r\n    <div class=\"bg-white p-4 rounded-lg shadow-md mb-6\">\r\n      <h3 class=\"text-xl font-medium text-gray-700 mb-2\">Estadísticas</h3>\r\n      <div class=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\r\n        <div class=\"text-center\">\r\n          <p class=\"text-gray-600\">Cartones Disponibles</p>\r\n          <p class=\"text-2xl font-bold text-blue-600\">{{ availableCartons }}</p>\r\n        </div>\r\n        <div class=\"text-center\">\r\n          <p class=\"text-gray-600\">Cartones Vendidos</p>\r\n          <p class=\"text-2xl font-bold text-green-600\">{{ soldCartons }}</p>\r\n        </div>\r\n        <div class=\"text-center\">\r\n          <p class=\"text-gray-600\">Vendedores</p>\r\n          <p class=\"text-2xl font-bold text-purple-600\">{{ sellerCount }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Lista de Cartones -->\r\n    <p v-if=\"cartones.length === 0\" class=\"text-gray-600\">No hay cartones disponibles.</p>\r\n    <div class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n      <div\r\n        v-for=\"carton in cartones\"\r\n        :key=\"carton.id\"\r\n        class=\"carton-item bg-white p-4 rounded-lg shadow-md hover:shadow-lg transition cursor-pointer\"\r\n        @click=\"openModal(carton)\"\r\n      >\r\n        <img :src=\"carton.imageUrl\" :alt=\"'Cartón ' + carton.serial\" class=\"carton-image w-full h-48 object-cover rounded-md mb-2\" />\r\n        <p class=\"text-gray-800 font-medium\"><strong>Serial:</strong> {{ carton.serial }}</p>\r\n        <p class=\"text-gray-600\"><strong>Estado:</strong> {{ carton.estado }}</p>\r\n      </div>\r\n    </div>\r\n    <!-- Modal -->\r\n    <div v-if=\"selectedCarton\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div class=\"bg-white p-6 rounded-lg shadow-lg max-w-lg w-full\">\r\n        <h3 class=\"text-xl font-semibold text-gray-800 mb-4\">Detalles del Cartón</h3>\r\n        <img :src=\"selectedCarton.imageUrl\" :alt=\"'Cartón ' + selectedCarton.serial\" class=\"w-full h-auto rounded-md mb-4\" />\r\n        <p class=\"text-gray-800 font-medium\"><strong>Serial:</strong> {{ selectedCarton.serial }}</p>\r\n        <p class=\"text-gray-600\"><strong>Estado:</strong> {{ selectedCarton.estado }}</p>\r\n        <button\r\n          @click=\"closeModal\"\r\n          class=\"mt-4 bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition\"\r\n        >\r\n          Cerrar\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { db } from '../firebase';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      cartones: [],\r\n      selectedCarton: null,\r\n      availableCartons: 0,\r\n      soldCartons: 0,\r\n      sellerCount: 0\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.loadCartones();\r\n    await this.loadSellers();\r\n  },\r\n  methods: {\r\n    async loadCartones() {\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, 'cartones'));\r\n        this.cartones = querySnapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        this.availableCartons = this.cartones.filter(c => c.estado === 'disponible').length;\r\n        this.soldCartons = this.cartones.filter(c => c.estado === 'vendido').length;\r\n        console.log('Cartones cargados:', this.cartones);\r\n      } catch (error) {\r\n        console.error('Error al cargar los cartones:', error);\r\n        alert('Error al cargar los cartones: ' + error.message);\r\n      }\r\n    },\r\n    async loadSellers() {\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, 'vendedores'));\r\n        this.sellerCount = querySnapshot.docs.length;\r\n      } catch (error) {\r\n        console.error('Error al cargar los vendedores:', error);\r\n        alert('Error al cargar los vendedores: ' + error.message);\r\n      }\r\n    },\r\n    openModal(carton) {\r\n      this.selectedCarton = carton;\r\n    },\r\n    closeModal() {\r\n      this.selectedCarton = null;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Tailwind maneja los estilos */\r\n</style>"],"mappings":";;;AAsDA,SAASA,EAAC,QAAS,aAAa;AAChC,SAASC,UAAU,EAAEC,OAAM,QAAS,oBAAoB;AAExD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,cAAc,EAAE,IAAI;MACpBC,gBAAgB,EAAE,CAAC;MACnBC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,YAAY,CAAC,CAAC;IACzB,MAAM,IAAI,CAACC,WAAW,CAAC,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMF,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMG,aAAY,GAAI,MAAMX,OAAO,CAACD,UAAU,CAACD,EAAE,EAAE,UAAU,CAAC,CAAC;QAC/D,IAAI,CAACI,QAAO,GAAIS,aAAa,CAACC,IAAI,CAACC,GAAG,CAACC,GAAE,KAAM;UAC7CC,EAAE,EAAED,GAAG,CAACC,EAAE;UACV,GAAGD,GAAG,CAACb,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QACH,IAAI,CAACG,gBAAe,GAAI,IAAI,CAACF,QAAQ,CAACc,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACC,MAAK,KAAM,YAAY,CAAC,CAACC,MAAM;QACnF,IAAI,CAACd,WAAU,GAAI,IAAI,CAACH,QAAQ,CAACc,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACC,MAAK,KAAM,SAAS,CAAC,CAACC,MAAM;QAC3EC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACnB,QAAQ,CAAC;MAClD,EAAE,OAAOoB,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrDC,KAAK,CAAC,gCAA+B,GAAID,KAAK,CAACE,OAAO,CAAC;MACzD;IACF,CAAC;IACD,MAAMf,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAME,aAAY,GAAI,MAAMX,OAAO,CAACD,UAAU,CAACD,EAAE,EAAE,YAAY,CAAC,CAAC;QACjE,IAAI,CAACQ,WAAU,GAAIK,aAAa,CAACC,IAAI,CAACO,MAAM;MAC9C,EAAE,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvDC,KAAK,CAAC,kCAAiC,GAAID,KAAK,CAACE,OAAO,CAAC;MAC3D;IACF,CAAC;IACDC,SAASA,CAACC,MAAM,EAAE;MAChB,IAAI,CAACvB,cAAa,GAAIuB,MAAM;IAC9B,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACxB,cAAa,GAAI,IAAI;IAC5B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}