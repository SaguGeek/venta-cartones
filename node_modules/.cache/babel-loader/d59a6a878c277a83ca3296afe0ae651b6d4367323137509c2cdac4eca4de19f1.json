{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, normalizeClass as _normalizeClass, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"min-h-screen flex items-center justify-center bg-gradient-to-br from-indigo-900 to-purple-300\"\n};\nconst _hoisted_2 = {\n  class: \"bg-white p-8 rounded-xl shadow-2xl w-full max-w-lg transform transition-all duration-500 opacity-0 animate-fade-in\"\n};\nconst _hoisted_3 = {\n  class: \"flex justify-end mb-6\"\n};\nconst _hoisted_4 = {\n  class: \"grid grid-cols-1 sm:grid-cols-2 gap-4 mb-6\"\n};\nconst _hoisted_5 = {\n  class: \"bg-gray-100 p-4 rounded-lg text-center\"\n};\nconst _hoisted_6 = {\n  class: \"text-2xl font-bold text-green-600\"\n};\nconst _hoisted_7 = {\n  class: \"bg-gray-100 p-4 rounded-lg text-center\"\n};\nconst _hoisted_8 = {\n  class: \"text-2xl font-bold text-blue-600\"\n};\nconst _hoisted_9 = {\n  class: \"bg-gray-100 p-4 rounded-lg text-center\"\n};\nconst _hoisted_10 = {\n  class: \"text-2xl font-bold text-red-600\"\n};\nconst _hoisted_11 = {\n  class: \"bg-gray-100 p-4 rounded-lg text-center\"\n};\nconst _hoisted_12 = {\n  class: \"text-2xl font-bold text-purple-600\"\n};\nconst _hoisted_13 = {\n  class: \"mb-4\"\n};\nconst _hoisted_14 = [\"disabled\"];\nconst _hoisted_15 = {\n  key: 0,\n  class: \"flex items-center\"\n};\nconst _hoisted_16 = {\n  key: 1\n};\nconst _hoisted_17 = {\n  key: 0,\n  class: \"relative\"\n};\nconst _hoisted_18 = {\n  ref: \"video\",\n  autoplay: \"\",\n  playsinline: \"\",\n  class: \"w-full rounded-lg\"\n};\nconst _hoisted_19 = {\n  ref: \"canvas\",\n  class: \"absolute top-0 left-0 w-full opacity-0\"\n};\nconst _hoisted_20 = {\n  key: 1,\n  class: \"mt-4 text-center\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[11] || (_cache[11] = _createStaticVNode(\"<div class=\\\"text-center mb-6\\\" data-v-274e1155><div class=\\\"flex justify-center mb-4\\\" data-v-274e1155><span class=\\\"text-4xl font-bold text-indigo-600 animate-spin-slow\\\" data-v-274e1155>VC</span></div><h2 class=\\\"text-3xl font-bold text-gray-800 mb-2\\\" data-v-274e1155>Dashboard del Vendedor</h2><p class=\\\"text-gray-600\\\" data-v-274e1155>Gestiona tus cartones y ventas</p></div>\", 1)), _createCommentVNode(\" Botón para Cerrar Sesión \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.logout && $options.logout(...args)),\n    class: \"bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50 transition duration-300\"\n  }, \" Cerrar Sesión \")]), _createCommentVNode(\" Estadísticas \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[6] || (_cache[6] = _createElementVNode(\"p\", {\n    class: \"text-gray-600\"\n  }, \"Saldo\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_6, \"$\" + _toDisplayString($data.sellerSaldo), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_7, [_cache[7] || (_cache[7] = _createElementVNode(\"p\", {\n    class: \"text-gray-600\"\n  }, \"Cartones Asignados\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_8, _toDisplayString($data.assignedCartons.length), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_cache[8] || (_cache[8] = _createElementVNode(\"p\", {\n    class: \"text-gray-600\"\n  }, \"Cartones Vendidos\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_10, _toDisplayString($data.soldCartons.length), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_11, [_cache[9] || (_cache[9] = _createElementVNode(\"p\", {\n    class: \"text-gray-600\"\n  }, \"Cartones Disponibles\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_12, _toDisplayString($data.availableCartons.length), 1 /* TEXT */)])]), _createCommentVNode(\" Botón para Vender Cartón \"), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.startQRScanner && $options.startQRScanner(...args)),\n    class: \"w-full bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-opacity-50 transition duration-300 flex items-center justify-center\",\n    disabled: $data.scanning\n  }, [$data.scanning ? (_openBlock(), _createElementBlock(\"span\", _hoisted_15, _cache[10] || (_cache[10] = [_createElementVNode(\"svg\", {\n    class: \"animate-spin h-5 w-5 mr-2 text-white\",\n    viewBox: \"0 0 24 24\"\n  }, [_createElementVNode(\"circle\", {\n    class: \"opacity-25\",\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\",\n    stroke: \"currentColor\",\n    \"stroke-width\": \"4\"\n  }), _createElementVNode(\"path\", {\n    class: \"opacity-75\",\n    fill: \"currentColor\",\n    d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n  })], -1 /* HOISTED */), _createTextVNode(\" Escaneando... \")]))) : (_openBlock(), _createElementBlock(\"span\", _hoisted_16, \"Escanear QR para Vender\"))], 8 /* PROPS */, _hoisted_14), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.manualSerial = $event),\n    type: \"text\",\n    placeholder: \"Ingresar Serial Manualmente\",\n    class: \"mt-2 block w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-300\",\n    onKeyup: _cache[3] || (_cache[3] = _withKeys((...args) => $options.processManualSerial && $options.processManualSerial(...args), [\"enter\"]))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.manualSerial]])]), _createCommentVNode(\" Escáner de QR \"), $data.showScanner ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_createElementVNode(\"video\", _hoisted_18, null, 512 /* NEED_PATCH */), _createElementVNode(\"canvas\", _hoisted_19, null, 512 /* NEED_PATCH */), $data.scanMessage ? (_openBlock(), _createElementBlock(\"p\", {\n    key: 0,\n    class: _normalizeClass([\"mt-2 text-center text-lg font-medium\", {\n      'text-red-600': $data.errorMessage,\n      'text-green-600': $data.successMessage\n    }])\n  }, _toDisplayString($data.scanMessage), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true), $data.showActionButtons ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [_createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.sellCarton && $options.sellCarton(...args)),\n    class: \"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 mr-2\"\n  }, \" Vender \"), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.cancelScan && $options.cancelScan(...args)),\n    class: \"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600\"\n  }, \" Cancelar \")])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","ref","autoplay","playsinline","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createStaticVNode","_createCommentVNode","_hoisted_3","onClick","_cache","args","$options","logout","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","$data","sellerSaldo","_hoisted_7","_hoisted_8","assignedCartons","length","_hoisted_9","_hoisted_10","soldCartons","_hoisted_11","_hoisted_12","availableCartons","_hoisted_13","startQRScanner","disabled","scanning","_hoisted_15","viewBox","cx","cy","r","stroke","fill","d","_createTextVNode","_hoisted_16","_hoisted_14","$event","manualSerial","type","placeholder","onKeyup","_withKeys","processManualSerial","showScanner","_hoisted_17","_hoisted_18","_hoisted_19","scanMessage","_normalizeClass","errorMessage","successMessage","showActionButtons","_hoisted_20","sellCarton","cancelScan"],"sources":["D:\\Lotweb\\venta-cartones\\src\\components\\SellerDashboard.vue"],"sourcesContent":["```vue\r\n<template>\r\n  <div class=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-indigo-900 to-purple-300\">\r\n    <div class=\"bg-white p-8 rounded-xl shadow-2xl w-full max-w-lg transform transition-all duration-500 opacity-0 animate-fade-in\">\r\n      <div class=\"text-center mb-6\">\r\n        <div class=\"flex justify-center mb-4\">\r\n          <span class=\"text-4xl font-bold text-indigo-600 animate-spin-slow\">VC</span>\r\n        </div>\r\n        <h2 class=\"text-3xl font-bold text-gray-800 mb-2\">Dashboard del Vendedor</h2>\r\n        <p class=\"text-gray-600\">Gestiona tus cartones y ventas</p>\r\n      </div>\r\n\r\n      <!-- Botón para Cerrar Sesión -->\r\n      <div class=\"flex justify-end mb-6\">\r\n        <button\r\n          @click=\"logout\"\r\n          class=\"bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50 transition duration-300\"\r\n        >\r\n          Cerrar Sesión\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Estadísticas -->\r\n      <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-4 mb-6\">\r\n        <div class=\"bg-gray-100 p-4 rounded-lg text-center\">\r\n          <p class=\"text-gray-600\">Saldo</p>\r\n          <p class=\"text-2xl font-bold text-green-600\">${{ sellerSaldo }}</p>\r\n        </div>\r\n        <div class=\"bg-gray-100 p-4 rounded-lg text-center\">\r\n          <p class=\"text-gray-600\">Cartones Asignados</p>\r\n          <p class=\"text-2xl font-bold text-blue-600\">{{ assignedCartons.length }}</p>\r\n        </div>\r\n        <div class=\"bg-gray-100 p-4 rounded-lg text-center\">\r\n          <p class=\"text-gray-600\">Cartones Vendidos</p>\r\n          <p class=\"text-2xl font-bold text-red-600\">{{ soldCartons.length }}</p>\r\n        </div>\r\n        <div class=\"bg-gray-100 p-4 rounded-lg text-center\">\r\n          <p class=\"text-gray-600\">Cartones Disponibles</p>\r\n          <p class=\"text-2xl font-bold text-purple-600\">{{ availableCartons.length }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Botón para Vender Cartón -->\r\n      <div class=\"mb-4\">\r\n        <button\r\n          @click=\"startQRScanner\"\r\n          class=\"w-full bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-opacity-50 transition duration-300 flex items-center justify-center\"\r\n          :disabled=\"scanning\"\r\n        >\r\n          <span v-if=\"scanning\" class=\"flex items-center\">\r\n            <svg class=\"animate-spin h-5 w-5 mr-2 text-white\" viewBox=\"0 0 24 24\">\r\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n            </svg>\r\n            Escaneando...\r\n          </span>\r\n          <span v-else>Escanear QR para Vender</span>\r\n        </button>\r\n        <input\r\n          v-model=\"manualSerial\"\r\n          type=\"text\"\r\n          placeholder=\"Ingresar Serial Manualmente\"\r\n          class=\"mt-2 block w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-300\"\r\n          @keyup.enter=\"processManualSerial\"\r\n        />\r\n      </div>\r\n\r\n      <!-- Escáner de QR -->\r\n      <div v-if=\"showScanner\" class=\"relative\">\r\n        <video ref=\"video\" autoplay playsinline class=\"w-full rounded-lg\"></video>\r\n        <canvas ref=\"canvas\" class=\"absolute top-0 left-0 w-full opacity-0\"></canvas>\r\n        <p v-if=\"scanMessage\" class=\"mt-2 text-center text-lg font-medium\" :class=\"{ 'text-red-600': errorMessage, 'text-green-600': successMessage }\">\r\n          {{ scanMessage }}\r\n        </p>\r\n        <div v-if=\"showActionButtons\" class=\"mt-4 text-center\">\r\n          <button\r\n            @click=\"sellCarton\"\r\n            class=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 mr-2\"\r\n          >\r\n            Vender\r\n          </button>\r\n          <button\r\n            @click=\"cancelScan\"\r\n            class=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600\"\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { auth } from '../firebase';\r\nimport { signOut } from 'firebase/auth';\r\nimport { db } from '../firebase';\r\nimport { collection, query, where, getDocs, doc, updateDoc, onSnapshot } from 'firebase/firestore';\r\nimport jsQR from 'jsqr';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      sellerId: '',\r\n      sellerSaldo: 0,\r\n      assignedCartons: [],\r\n      soldCartons: [],\r\n      availableCartons: [],\r\n      scanning: false,\r\n      showScanner: false,\r\n      showActionButtons: false,\r\n      scanMessage: '',\r\n      errorMessage: false,\r\n      successMessage: false,\r\n      manualSerial: '',\r\n      video: null,\r\n      canvas: null,\r\n      stream: null\r\n    };\r\n  },\r\n  async mounted() {\r\n    this.sellerId = auth.currentUser.uid;\r\n    await this.loadSellerData();\r\n    this.video = this.$refs.video;\r\n    this.canvas = this.$refs.canvas.getContext('2d');\r\n    this.loadSellerBalance();\r\n  },\r\n  beforeUnmount() {\r\n    if (this.stream) {\r\n      this.stream.getTracks().forEach(track => track.stop());\r\n    }\r\n  },\r\n  methods: {\r\n    async loadSellerData() {\r\n      try {\r\n        const assignedQuery = query(\r\n          collection(db, 'cartones'),\r\n          where('vendedorId', '==', this.sellerId),\r\n          where('estado', '==', 'asignado')\r\n        );\r\n        onSnapshot(assignedQuery, (snapshot) => {\r\n          this.assignedCartons = snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            serial: doc.data().serial\r\n          })).sort((a, b) => parseInt(a.serial.replace('LM', '')) - parseInt(b.serial.replace('LM', '')));\r\n        });\r\n\r\n        const soldQuery = query(\r\n          collection(db, 'cartones'),\r\n          where('vendedorId', '==', this.sellerId),\r\n          where('estado', '==', 'vendido')\r\n        );\r\n        onSnapshot(soldQuery, (snapshot) => {\r\n          this.soldCartons = snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            serial: doc.data().serial\r\n          })).sort((a, b) => parseInt(a.serial.replace('LM', '')) - parseInt(b.serial.replace('LM', '')));\r\n        });\r\n\r\n        const availableQuery = query(\r\n          collection(db, 'cartones'),\r\n          where('vendedorId', '==', null),\r\n          where('estado', '==', 'disponible')\r\n        );\r\n        onSnapshot(availableQuery, (snapshot) => {\r\n          this.availableCartons = snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            serial: doc.data().serial\r\n          })).sort((a, b) => parseInt(a.serial.replace('LM', '')) - parseInt(b.serial.replace('LM', '')));\r\n        });\r\n      } catch (error) {\r\n        console.error('Error al cargar datos del vendedor:', error);\r\n        alert('Error al cargar datos: ' + error.message);\r\n      }\r\n    },\r\n    loadSellerBalance() {\r\n      const sellerRef = doc(db, 'vendedores', this.sellerId);\r\n      onSnapshot(sellerRef, (docSnapshot) => {\r\n        this.sellerSaldo = docSnapshot.data()?.saldoGenerado || 0;\r\n      }, (error) => {\r\n        console.error('Error al cargar saldo:', error);\r\n        alert('Error al cargar saldo: ' + error.message);\r\n      });\r\n    },\r\n    async startQRScanner() {\r\n      if (this.scanning) return;\r\n      this.scanning = true;\r\n      this.showScanner = true;\r\n      this.scanMessage = '';\r\n      this.errorMessage = false;\r\n      this.successMessage = false;\r\n      this.showActionButtons = false;\r\n\r\n      try {\r\n        this.stream = await navigator.mediaDevices.getUserMedia({ video: { facingMode: 'environment' } });\r\n        this.video.srcObject = this.stream;\r\n        this.video.play();\r\n        this.scanQRCode();\r\n      } catch (error) {\r\n        console.error('Error al acceder a la cámara:', error);\r\n        this.scanMessage = 'Error al acceder a la cámara: ' + error.message;\r\n        this.errorMessage = true;\r\n        this.scanning = false;\r\n      }\r\n    },\r\n    scanQRCode() {\r\n      if (this.video.readyState === this.video.HAVE_ENOUGH_DATA) {\r\n        this.canvas.drawImage(this.video, 0, 0, this.canvas.canvas.width, this.canvas.canvas.height);\r\n        const imageData = this.canvas.getImageData(0, 0, this.canvas.canvas.width, this.canvas.canvas.height);\r\n        const code = jsQR(imageData.data, imageData.width, imageData.height);\r\n\r\n        if (code) {\r\n          this.processSerial(code.data);\r\n          this.stream.getTracks().forEach(track => track.stop());\r\n          this.scanning = false;\r\n        } else {\r\n          requestAnimationFrame(this.scanQRCode);\r\n        }\r\n      } else {\r\n        requestAnimationFrame(this.scanQRCode);\r\n      }\r\n    },\r\n    async processSerial(serial) {\r\n      const cartonDoc = await getDocs(query(collection(db, 'cartones'), where('serial', '==', serial)));\r\n      if (cartonDoc.empty) {\r\n        this.scanMessage = 'Cartón no encontrado.';\r\n        this.errorMessage = true;\r\n        return;\r\n      }\r\n\r\n      const cartonData = cartonDoc.docs[0].data();\r\n      const cartonState = cartonData.estado;\r\n\r\n      if (cartonState === 'vendido') {\r\n        this.scanMessage = 'Cartón ya vendido.';\r\n        this.errorMessage = true;\r\n      } else if (cartonState === 'disponible' || (cartonState === 'asignado' && cartonData.vendedorId === this.sellerId)) {\r\n        this.scanMessage = `Cartón ${serial} encontrado. ¿Deseas venderlo?`;\r\n        this.showActionButtons = true;\r\n      }\r\n    },\r\n    async sellCarton() {\r\n      if (!this.scanMessage.includes('encontrado')) return;\r\n      const serial = this.scanMessage.match(/Cartón (\\w+)/)[1];\r\n      const cartonDoc = await getDocs(query(collection(db, 'cartones'), where('serial', '==', serial)));\r\n      const cartonId = cartonDoc.docs[0].id;\r\n\r\n      try {\r\n        await updateDoc(doc(db, 'cartones', cartonId), { estado: 'vendido' });\r\n        const sellerRef = doc(db, 'vendedores', this.sellerId);\r\n        const currentSaldo = this.sellerSaldo;\r\n        await updateDoc(sellerRef, { saldoGenerado: currentSaldo + 1 });\r\n\r\n        this.scanMessage = `Cartón ${serial} vendido exitosamente.`;\r\n        this.successMessage = true;\r\n        this.showActionButtons = false;\r\n        this.loadSellerData();\r\n        this.loadSellerBalance();\r\n      } catch (error) {\r\n        console.error('Error al vender el cartón:', error);\r\n        this.scanMessage = 'Error al vender el cartón: ' + error.message;\r\n        this.errorMessage = true;\r\n      }\r\n    },\r\n    cancelScan() {\r\n      if (this.stream) this.stream.getTracks().forEach(track => track.stop());\r\n      this.scanning = false;\r\n      this.showScanner = false;\r\n      this.scanMessage = '';\r\n      this.showActionButtons = false;\r\n    },\r\n    processManualSerial() {\r\n      if (this.manualSerial) {\r\n        this.processSerial(this.manualSerial);\r\n        this.manualSerial = '';\r\n      }\r\n    },\r\n    async logout() {\r\n      try {\r\n        await signOut(auth);\r\n        this.$router.push('/login');\r\n      } catch (error) {\r\n        console.error('Error al cerrar sesión:', error);\r\n        alert('Error al cerrar sesión: ' + error.message);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Animación de fade-in para la tarjeta */\r\n.animate-fade-in {\r\n  animation: fadeIn 0.5s ease-in-out forwards;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(20px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n/* Animación de rotación lenta para el logo */\r\n.animate-spin-slow {\r\n  animation: spin 2s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style>\r\n```"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}