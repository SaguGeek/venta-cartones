{"ast":null,"code":"export default {\n  data() {\n    return {\n      selectedFile: null,\n      imageUrl: null,\n      cloudinaryUrl: 'https://api.cloudinary.com/v1_1/dardyvsja/image/upload',\n      // URL correcta\n      uploadPreset: 'cartones_upload' // Verifica este nombre\n    };\n  },\n  methods: {\n    onFileChange(event) {\n      this.selectedFile = event.target.files[0];\n    },\n    async uploadImage() {\n      if (!this.selectedFile) {\n        alert('Por favor, selecciona una imagen.');\n        return;\n      }\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n      formData.append('upload_preset', this.uploadPreset);\n      try {\n        const response = await fetch(this.cloudinaryUrl, {\n          method: 'POST',\n          body: formData\n        });\n        const data = await response.json();\n        if (data.secure_url) {\n          this.imageUrl = data.secure_url;\n          console.log('Imagen subida:', this.imageUrl);\n          this.$emit('image-uploaded', {\n            serial: `LM${Math.floor(Math.random() * 10000).toString().padStart(4, '0')}`,\n            imageUrl: this.imageUrl\n          });\n        } else {\n          alert('Error al subir la imagen: ' + JSON.stringify(data));\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        alert('Error al subir la imagen: ' + error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","selectedFile","imageUrl","cloudinaryUrl","uploadPreset","methods","onFileChange","event","target","files","uploadImage","alert","formData","FormData","append","response","fetch","method","body","json","secure_url","console","log","$emit","serial","Math","floor","random","toString","padStart","JSON","stringify","error","message"],"sources":["D:\\Lotweb\\venta-cartones\\src\\components\\UploadCarton.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Subir Cart√≥n</h2>\r\n    <input type=\"file\" @change=\"onFileChange\" accept=\"image/*\" />\r\n    <button @click=\"uploadImage\">Subir Imagen</button>\r\n    <p v-if=\"imageUrl\">Imagen subida: <a :href=\"imageUrl\" target=\"_blank\">{{ imageUrl }}</a></p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedFile: null,\r\n      imageUrl: null,\r\n      cloudinaryUrl: 'https://api.cloudinary.com/v1_1/dardyvsja/image/upload', // URL correcta\r\n      uploadPreset: 'cartones_upload' // Verifica este nombre\r\n    };\r\n  },\r\n  methods: {\r\n    onFileChange(event) {\r\n      this.selectedFile = event.target.files[0];\r\n    },\r\n    async uploadImage() {\r\n      if (!this.selectedFile) {\r\n        alert('Por favor, selecciona una imagen.');\r\n        return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append('file', this.selectedFile);\r\n      formData.append('upload_preset', this.uploadPreset);\r\n\r\n      try {\r\n        const response = await fetch(this.cloudinaryUrl, {\r\n          method: 'POST',\r\n          body: formData\r\n        });\r\n        const data = await response.json();\r\n        if (data.secure_url) {\r\n          this.imageUrl = data.secure_url;\r\n          console.log('Imagen subida:', this.imageUrl);\r\n          this.$emit('image-uploaded', {\r\n            serial: `LM${Math.floor(Math.random() * 10000).toString().padStart(4, '0')}`,\r\n            imageUrl: this.imageUrl\r\n          });\r\n        } else {\r\n          alert('Error al subir la imagen: ' + JSON.stringify(data));\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        alert('Error al subir la imagen: ' + error.message);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ndiv {\r\n  margin: 20px;\r\n}\r\ninput, button {\r\n  margin: 10px 0;\r\n}\r\n</style>"],"mappings":"AAUA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,aAAa,EAAE,wDAAwD;MAAE;MACzEC,YAAY,EAAE,iBAAgB,CAAE;IAClC,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAACC,KAAK,EAAE;MAClB,IAAI,CAACN,YAAW,GAAIM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC3C,CAAC;IACD,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI,CAAC,IAAI,CAACT,YAAY,EAAE;QACtBU,KAAK,CAAC,mCAAmC,CAAC;QAC1C;MACF;MAEA,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACb,YAAY,CAAC;MAC1CW,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE,IAAI,CAACV,YAAY,CAAC;MAEnD,IAAI;QACF,MAAMW,QAAO,GAAI,MAAMC,KAAK,CAAC,IAAI,CAACb,aAAa,EAAE;UAC/Cc,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEN;QACR,CAAC,CAAC;QACF,MAAMZ,IAAG,GAAI,MAAMe,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClC,IAAInB,IAAI,CAACoB,UAAU,EAAE;UACnB,IAAI,CAAClB,QAAO,GAAIF,IAAI,CAACoB,UAAU;UAC/BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACpB,QAAQ,CAAC;UAC5C,IAAI,CAACqB,KAAK,CAAC,gBAAgB,EAAE;YAC3BC,MAAM,EAAE,KAAKC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAI,KAAK,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;YAC5E3B,QAAQ,EAAE,IAAI,CAACA;UACjB,CAAC,CAAC;QACJ,OAAO;UACLS,KAAK,CAAC,4BAA2B,GAAImB,IAAI,CAACC,SAAS,CAAC/B,IAAI,CAAC,CAAC;QAC5D;MACF,EAAE,OAAOgC,KAAK,EAAE;QACdX,OAAO,CAACW,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9BrB,KAAK,CAAC,4BAA2B,GAAIqB,KAAK,CAACC,OAAO,CAAC;MACrD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}