{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { db } from '../firebase';\nimport { collection, query, where, onSnapshot, doc, updateDoc, getDocs } from 'firebase/firestore';\nimport { auth } from '../firebase';\nexport default {\n  data() {\n    return {\n      availableCartons: [],\n      soldCartons: [],\n      allCartons: [],\n      saldoGenerado: 0,\n      sellerName: '',\n      selectedCarton: null,\n      manualSerial: '',\n      scanning: false,\n      unsubscribeAvailable: null,\n      unsubscribeSold: null,\n      stream: null,\n      inactivityTimeout: null,\n      currentPage: 1,\n      itemsPerPage: 10\n    };\n  },\n  computed: {\n    paginatedCartons() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.allCartons.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.allCartons.length / this.itemsPerPage);\n    }\n  },\n  async mounted() {\n    await this.loadCartons();\n    await this.loadUserData();\n    this.setupInactivityTimer();\n    this.resetInactivityTimer();\n\n    // Escuchar eventos de interacción para resetear el temporizador\n    ['click', 'mousemove', 'keydown', 'touchstart'].forEach(event => {\n      window.addEventListener(event, this.resetInactivityTimer);\n    });\n  },\n  beforeUnmount() {\n    if (this.unsubscribeAvailable) this.unsubscribeAvailable();\n    if (this.unsubscribeSold) this.unsubscribeSold();\n    if (this.stream) {\n      this.stream.getTracks().forEach(track => track.stop());\n    }\n    if (this.inactivityTimeout) {\n      clearTimeout(this.inactivityTimeout);\n    }\n    ['click', 'mousemove', 'keydown', 'touchstart'].forEach(event => {\n      window.removeEventListener(event, this.resetInactivityTimer);\n    });\n  },\n  methods: {\n    async loadCartons() {\n      const user = auth.currentUser;\n      if (!user) return;\n\n      // Cargar cartones asignados\n      const assignedQuery = query(collection(db, 'cartones'), where('vendedorId', '==', user.uid), where('estado', '==', 'asignado'));\n      this.unsubscribeAvailable = onSnapshot(assignedQuery, snapshot => {\n        this.availableCartons = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        this.updateAllCartons();\n      }, error => console.error('Error al cargar cartones disponibles:', error));\n\n      // Cargar cartones vendidos\n      const soldQuery = query(collection(db, 'cartones'), where('vendedorId', '==', user.uid), where('estado', '==', 'vendido'));\n      this.unsubscribeSold = onSnapshot(soldQuery, snapshot => {\n        this.soldCartons = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        this.updateAllCartons();\n      }, error => console.error('Error al cargar cartones vendidos:', error));\n    },\n    updateAllCartons() {\n      this.allCartons = [...this.availableCartons, ...this.soldCartons].sort((a, b) => a.serial.localeCompare(b.serial));\n      // Resetear a la primera página si cambian los cartones\n      this.currentPage = 1;\n    },\n    async loadUserData() {\n      const user = auth.currentUser;\n      if (!user) return;\n      const userRef = doc(db, 'vendedores', user.uid);\n      onSnapshot(userRef, docSnap => {\n        if (docSnap.exists()) {\n          const data = docSnap.data();\n          this.saldoGenerado = data.saldoGenerado || 0;\n          this.sellerName = data.nombre || 'Vendedor';\n        }\n      }, error => console.error('Error al cargar datos del vendedor:', error));\n    },\n    setupInactivityTimer() {\n      this.inactivityTimeout = setTimeout(() => this.logout(), 15 * 60 * 1000); // 15 minutos\n    },\n    resetInactivityTimer() {\n      if (this.inactivityTimeout) {\n        clearTimeout(this.inactivityTimeout);\n      }\n      this.inactivityTimeout = setTimeout(() => this.logout(), 15 * 60 * 1000);\n    },\n    async logout() {\n      try {\n        await auth.signOut();\n        this.$router.push('/login');\n      } catch (error) {\n        console.error('Error al cerrar sesión:', error);\n        alert('Error al cerrar sesión: ' + error.message);\n      }\n    },\n    async startQRScanner() {\n      this.scanning = true;\n      const video = this.$refs.video;\n      const canvas = this.$refs.canvas;\n      try {\n        this.stream = await navigator.mediaDevices.getUserMedia({\n          video: {\n            facingMode: 'environment'\n          }\n        });\n        video.srcObject = this.stream;\n        video.play();\n        const tick = () => {\n          if (video.readyState === video.HAVE_ENOUGH_DATA) {\n            canvas.height = video.videoHeight;\n            canvas.width = video.videoWidth;\n            const context = canvas.getContext('2d');\n            context.drawImage(video, 0, 0, canvas.width, canvas.height);\n            const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n            const code = window.jsQR(imageData.data, imageData.width, imageData.height);\n            if (code) {\n              this.manualSerial = code.data;\n              this.checkCarton();\n              this.stopQRScanner();\n            }\n          }\n          if (this.scanning) requestAnimationFrame(tick);\n        };\n        requestAnimationFrame(tick);\n      } catch (error) {\n        console.error('Error al acceder a la cámara:', error);\n        alert('No se pudo acceder a la cámara. Asegúrate de otorgar permisos.');\n        this.scanning = false;\n      }\n    },\n    stopQRScanner() {\n      if (this.stream) {\n        this.stream.getTracks().forEach(track => track.stop());\n      }\n      this.scanning = false;\n      this.$refs.video.srcObject = null;\n    },\n    async checkCarton() {\n      const serial = this.manualSerial.trim();\n      if (!serial) return;\n      const cartonQuery = query(collection(db, 'cartones'), where('serial', '==', serial), where('vendedorId', '==', auth.currentUser.uid), where('estado', '==', 'asignado'));\n      const snapshot = await getDocs(cartonQuery);\n      if (!snapshot.empty) {\n        this.selectedCarton = {\n          id: snapshot.docs[0].id,\n          ...snapshot.docs[0].data()\n        };\n        this.manualSerial = '';\n      } else {\n        alert('Cartón no encontrado o no disponible para este vendedor.');\n        this.manualSerial = '';\n      }\n    },\n    async confirmSale() {\n      if (!this.selectedCarton) return;\n      try {\n        const cartonRef = doc(db, 'cartones', this.selectedCarton.id);\n        await updateDoc(cartonRef, {\n          estado: 'vendido'\n        });\n        const sellerRef = doc(db, 'vendedores', auth.currentUser.uid);\n        const newSaldo = this.saldoGenerado + 5;\n        await updateDoc(sellerRef, {\n          saldoGenerado: newSaldo\n        });\n        this.saldoGenerado = newSaldo;\n        this.selectedCarton = null;\n        await this.loadCartons();\n      } catch (error) {\n        console.error('Error al vender el cartón:', error);\n        alert('Error al vender el cartón: ' + error.message);\n      }\n    },\n    cancelSale() {\n      this.selectedCarton = null;\n    },\n    handleImageError(carton) {\n      console.error(`Error al cargar la imagen del cartón ${carton.serial}:`, carton.imageUrl);\n      carton.imageUrl = null;\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    }\n  }\n};","map":{"version":3,"names":["db","collection","query","where","onSnapshot","doc","updateDoc","getDocs","auth","data","availableCartons","soldCartons","allCartons","saldoGenerado","sellerName","selectedCarton","manualSerial","scanning","unsubscribeAvailable","unsubscribeSold","stream","inactivityTimeout","currentPage","itemsPerPage","computed","paginatedCartons","start","end","slice","totalPages","Math","ceil","length","mounted","loadCartons","loadUserData","setupInactivityTimer","resetInactivityTimer","forEach","event","window","addEventListener","beforeUnmount","getTracks","track","stop","clearTimeout","removeEventListener","methods","user","currentUser","assignedQuery","uid","snapshot","docs","map","id","updateAllCartons","error","console","soldQuery","sort","a","b","serial","localeCompare","userRef","docSnap","exists","nombre","setTimeout","logout","signOut","$router","push","alert","message","startQRScanner","video","$refs","canvas","navigator","mediaDevices","getUserMedia","facingMode","srcObject","play","tick","readyState","HAVE_ENOUGH_DATA","height","videoHeight","width","videoWidth","context","getContext","drawImage","imageData","getImageData","code","jsQR","checkCarton","stopQRScanner","requestAnimationFrame","trim","cartonQuery","empty","confirmSale","cartonRef","estado","sellerRef","newSaldo","cancelSale","handleImageError","carton","imageUrl","prevPage","nextPage"],"sources":["D:\\Lotweb\\venta-cartones\\src\\components\\SellerDashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gradient-to-br from-indigo-100 to-purple-200 p-6\">\r\n    <div class=\"flex justify-between items-center mb-8\">\r\n      <h1 class=\"text-3xl font-bold text-gray-900 animate-fade-in\">\r\n        Dashboard de {{ sellerName || 'Vendedor' }}\r\n      </h1>\r\n      <button\r\n        @click=\"logout\"\r\n        class=\"bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition duration-300\"\r\n      >\r\n        Cerrar Sesión\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Estadísticas -->\r\n    <div class=\"bg-white p-6 rounded-xl shadow-lg mb-8 grid grid-cols-1 sm:grid-cols-4 gap-6\">\r\n      <div class=\"text-center p-4 bg-blue-50 rounded-lg transition-transform hover:scale-105\">\r\n        <p class=\"text-gray-600 font-medium\">Cartones Asignados</p>\r\n        <p class=\"text-3xl font-bold text-blue-600 mt-2\">{{ allCartons.length }}</p>\r\n      </div>\r\n      <div class=\"text-center p-4 bg-blue-50 rounded-lg transition-transform hover:scale-105\">\r\n        <p class=\"text-gray-600 font-medium\">Cartones Disponibles</p>\r\n        <p class=\"text-3xl font-bold text-blue-600 mt-2\">{{ availableCartons.length }}</p>\r\n      </div>\r\n      <div class=\"text-center p-4 bg-green-50 rounded-lg transition-transform hover:scale-105\">\r\n        <p class=\"text-gray-600 font-medium\">Cartones Vendidos</p>\r\n        <p class=\"text-3xl font-bold text-green-600 mt-2\">{{ soldCartons.length }}</p>\r\n      </div>\r\n      <div class=\"text-center p-4 bg-purple-50 rounded-lg transition-transform hover:scale-105\">\r\n        <p class=\"text-gray-600 font-medium\">Saldo Generado ($)</p>\r\n        <p class=\"text-3xl font-bold text-purple-600 mt-2\">{{ saldoGenerado }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Controles para Vender -->\r\n    <div class=\"bg-white p-6 rounded-xl shadow-lg mb-8\">\r\n      <h2 class=\"text-2xl font-semibold text-gray-800 mb-6\">Vender Cartón</h2>\r\n      <div class=\"flex flex-col sm:flex-row gap-4 mb-6\">\r\n        <button\r\n          @click=\"startQRScanner\"\r\n          class=\"bg-indigo-600 text-white px-6 py-3 rounded-lg hover:bg-indigo-700 transition duration-300 flex items-center justify-center w-full sm:w-auto\"\r\n          :disabled=\"scanning\"\r\n        >\r\n          <span v-if=\"scanning\" class=\"flex items-center\">\r\n            <svg class=\"animate-spin h-5 w-5 mr-2 text-white\" viewBox=\"0 0 24 24\">\r\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n            </svg>\r\n            Escaneando...\r\n          </span>\r\n          <span v-else>Escanear QR</span>\r\n        </button>\r\n        <input\r\n          v-model=\"manualSerial\"\r\n          type=\"text\"\r\n          placeholder=\"Ingresar Serial Manualmente\"\r\n          class=\"border border-gray-300 px-4 py-3 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-300 w-full sm:w-1/2\"\r\n          @keyup.enter=\"checkCarton\"\r\n        />\r\n      </div>\r\n\r\n      <!-- Modal para Confirmación de Venta -->\r\n      <div v-if=\"selectedCarton\" class=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 animate-fade-in\">\r\n        <div class=\"bg-white p-6 rounded-xl shadow-2xl max-w-lg w-full transform transition-all duration-300 hover:scale-105\">\r\n          <h3 class=\"text-2xl font-semibold text-gray-800 mb-4 text-center\">Confirmar Venta</h3>\r\n          <img :src=\"selectedCarton.imageUrl\" :alt=\"'Cartón ' + selectedCarton.serial\" class=\"w-full h-auto object-contain rounded-lg mb-4\" @error=\"handleImageError(selectedCarton)\" style=\"max-height: 200px;\" />\r\n          <p class=\"text-gray-800 font-medium text-center\">Serial: {{ selectedCarton.serial }}</p>\r\n          <div class=\"mt-6 flex justify-center space-x-6\">\r\n            <button @click=\"cancelSale\" class=\"bg-gray-500 text-white px-6 py-2 rounded-lg hover:bg-gray-600 transition duration-300\">\r\n              Cancelar\r\n            </button>\r\n            <button @click=\"confirmSale\" class=\"bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition duration-300\">\r\n              Vender\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Video para Escaneo QR (oculto por defecto) -->\r\n      <div v-if=\"scanning\" class=\"relative mt-6\">\r\n        <video ref=\"video\" class=\"w-full max-w-md rounded-lg shadow-md\" autoplay></video>\r\n        <canvas ref=\"canvas\" class=\"hidden\"></canvas>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Lista de Cartones -->\r\n    <div class=\"bg-white p-6 rounded-xl shadow-lg\">\r\n      <h2 class=\"text-2xl font-semibold text-gray-800 mb-6\">Todos los Cartones</h2>\r\n      <div v-if=\"paginatedCartons.length === 0\" class=\"text-gray-600 text-center py-4\">No hay cartones asignados.</div>\r\n      <div v-else class=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4\">\r\n        <div v-for=\"carton in paginatedCartons\" :key=\"carton.id\" :class=\"['bg-white border-2 border-gray-200 rounded-lg shadow-md hover:shadow-xl transition-shadow duration-300 overflow-hidden', { 'bg-green-800 bg-opacity-30': carton.estado === 'vendido' }]\">\r\n          <img :src=\"carton.imageUrl\" :alt=\"'Cartón ' + carton.serial\" class=\"w-full h-auto object-contain\" @error=\"handleImageError(carton)\" style=\"max-height: 150px;\" />\r\n          <div class=\"p-2\">\r\n            <p class=\"text-gray-800 font-medium text-center text-sm\">Serial: {{ carton.serial }}</p>\r\n            <p class=\"text-gray-600 text-center text-xs\">Estado: {{ carton.estado }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Controles de Paginación -->\r\n      <div class=\"flex justify-between items-center mt-6\">\r\n        <button\r\n          @click=\"prevPage\"\r\n          :disabled=\"currentPage === 1\"\r\n          class=\"bg-gray-300 text-gray-700 px-4 py-2 rounded-lg disabled:opacity-50 hover:bg-gray-400 transition duration-300\"\r\n        >\r\n          Anterior\r\n        </button>\r\n        <p class=\"text-gray-700\">Página {{ currentPage }} de {{ totalPages }}</p>\r\n        <button\r\n          @click=\"nextPage\"\r\n          :disabled=\"currentPage === totalPages\"\r\n          class=\"bg-gray-300 text-gray-700 px-4 py-2 rounded-lg disabled:opacity-50 hover:bg-gray-400 transition duration-300\"\r\n        >\r\n          Siguiente\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { db } from '../firebase';\r\nimport { collection, query, where, onSnapshot, doc, updateDoc, getDocs } from 'firebase/firestore';\r\nimport { auth } from '../firebase';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      availableCartons: [],\r\n      soldCartons: [],\r\n      allCartons: [],\r\n      saldoGenerado: 0,\r\n      sellerName: '',\r\n      selectedCarton: null,\r\n      manualSerial: '',\r\n      scanning: false,\r\n      unsubscribeAvailable: null,\r\n      unsubscribeSold: null,\r\n      stream: null,\r\n      inactivityTimeout: null,\r\n      currentPage: 1,\r\n      itemsPerPage: 10\r\n    };\r\n  },\r\n  computed: {\r\n    paginatedCartons() {\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      return this.allCartons.slice(start, end);\r\n    },\r\n    totalPages() {\r\n      return Math.ceil(this.allCartons.length / this.itemsPerPage);\r\n    }\r\n  },\r\n  async mounted() {\r\n    await this.loadCartons();\r\n    await this.loadUserData();\r\n    this.setupInactivityTimer();\r\n    this.resetInactivityTimer();\r\n\r\n    // Escuchar eventos de interacción para resetear el temporizador\r\n    ['click', 'mousemove', 'keydown', 'touchstart'].forEach(event => {\r\n      window.addEventListener(event, this.resetInactivityTimer);\r\n    });\r\n  },\r\n  beforeUnmount() {\r\n    if (this.unsubscribeAvailable) this.unsubscribeAvailable();\r\n    if (this.unsubscribeSold) this.unsubscribeSold();\r\n    if (this.stream) {\r\n      this.stream.getTracks().forEach(track => track.stop());\r\n    }\r\n    if (this.inactivityTimeout) {\r\n      clearTimeout(this.inactivityTimeout);\r\n    }\r\n    ['click', 'mousemove', 'keydown', 'touchstart'].forEach(event => {\r\n      window.removeEventListener(event, this.resetInactivityTimer);\r\n    });\r\n  },\r\n  methods: {\r\n    async loadCartons() {\r\n      const user = auth.currentUser;\r\n      if (!user) return;\r\n\r\n      // Cargar cartones asignados\r\n      const assignedQuery = query(\r\n        collection(db, 'cartones'),\r\n        where('vendedorId', '==', user.uid),\r\n        where('estado', '==', 'asignado')\r\n      );\r\n      this.unsubscribeAvailable = onSnapshot(assignedQuery, (snapshot) => {\r\n        this.availableCartons = snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        this.updateAllCartons();\r\n      }, (error) => console.error('Error al cargar cartones disponibles:', error));\r\n\r\n      // Cargar cartones vendidos\r\n      const soldQuery = query(\r\n        collection(db, 'cartones'),\r\n        where('vendedorId', '==', user.uid),\r\n        where('estado', '==', 'vendido')\r\n      );\r\n      this.unsubscribeSold = onSnapshot(soldQuery, (snapshot) => {\r\n        this.soldCartons = snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        this.updateAllCartons();\r\n      }, (error) => console.error('Error al cargar cartones vendidos:', error));\r\n    },\r\n    updateAllCartons() {\r\n      this.allCartons = [...this.availableCartons, ...this.soldCartons].sort((a, b) => a.serial.localeCompare(b.serial));\r\n      // Resetear a la primera página si cambian los cartones\r\n      this.currentPage = 1;\r\n    },\r\n    async loadUserData() {\r\n      const user = auth.currentUser;\r\n      if (!user) return;\r\n\r\n      const userRef = doc(db, 'vendedores', user.uid);\r\n      onSnapshot(userRef, (docSnap) => {\r\n        if (docSnap.exists()) {\r\n          const data = docSnap.data();\r\n          this.saldoGenerado = data.saldoGenerado || 0;\r\n          this.sellerName = data.nombre || 'Vendedor';\r\n        }\r\n      }, (error) => console.error('Error al cargar datos del vendedor:', error));\r\n    },\r\n    setupInactivityTimer() {\r\n      this.inactivityTimeout = setTimeout(() => this.logout(), 15 * 60 * 1000); // 15 minutos\r\n    },\r\n    resetInactivityTimer() {\r\n      if (this.inactivityTimeout) {\r\n        clearTimeout(this.inactivityTimeout);\r\n      }\r\n      this.inactivityTimeout = setTimeout(() => this.logout(), 15 * 60 * 1000);\r\n    },\r\n    async logout() {\r\n      try {\r\n        await auth.signOut();\r\n        this.$router.push('/login');\r\n      } catch (error) {\r\n        console.error('Error al cerrar sesión:', error);\r\n        alert('Error al cerrar sesión: ' + error.message);\r\n      }\r\n    },\r\n    async startQRScanner() {\r\n      this.scanning = true;\r\n      const video = this.$refs.video;\r\n      const canvas = this.$refs.canvas;\r\n\r\n      try {\r\n        this.stream = await navigator.mediaDevices.getUserMedia({ video: { facingMode: 'environment' } });\r\n        video.srcObject = this.stream;\r\n        video.play();\r\n\r\n        const tick = () => {\r\n          if (video.readyState === video.HAVE_ENOUGH_DATA) {\r\n            canvas.height = video.videoHeight;\r\n            canvas.width = video.videoWidth;\r\n            const context = canvas.getContext('2d');\r\n            context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\r\n            const code = window.jsQR(imageData.data, imageData.width, imageData.height);\r\n            if (code) {\r\n              this.manualSerial = code.data;\r\n              this.checkCarton();\r\n              this.stopQRScanner();\r\n            }\r\n          }\r\n          if (this.scanning) requestAnimationFrame(tick);\r\n        };\r\n        requestAnimationFrame(tick);\r\n      } catch (error) {\r\n        console.error('Error al acceder a la cámara:', error);\r\n        alert('No se pudo acceder a la cámara. Asegúrate de otorgar permisos.');\r\n        this.scanning = false;\r\n      }\r\n    },\r\n    stopQRScanner() {\r\n      if (this.stream) {\r\n        this.stream.getTracks().forEach(track => track.stop());\r\n      }\r\n      this.scanning = false;\r\n      this.$refs.video.srcObject = null;\r\n    },\r\n    async checkCarton() {\r\n      const serial = this.manualSerial.trim();\r\n      if (!serial) return;\r\n\r\n      const cartonQuery = query(\r\n        collection(db, 'cartones'),\r\n        where('serial', '==', serial),\r\n        where('vendedorId', '==', auth.currentUser.uid),\r\n        where('estado', '==', 'asignado')\r\n      );\r\n      const snapshot = await getDocs(cartonQuery);\r\n      if (!snapshot.empty) {\r\n        this.selectedCarton = { id: snapshot.docs[0].id, ...snapshot.docs[0].data() };\r\n        this.manualSerial = '';\r\n      } else {\r\n        alert('Cartón no encontrado o no disponible para este vendedor.');\r\n        this.manualSerial = '';\r\n      }\r\n    },\r\n    async confirmSale() {\r\n      if (!this.selectedCarton) return;\r\n\r\n      try {\r\n        const cartonRef = doc(db, 'cartones', this.selectedCarton.id);\r\n        await updateDoc(cartonRef, { estado: 'vendido' });\r\n\r\n        const sellerRef = doc(db, 'vendedores', auth.currentUser.uid);\r\n        const newSaldo = this.saldoGenerado + 5;\r\n        await updateDoc(sellerRef, { saldoGenerado: newSaldo });\r\n\r\n        this.saldoGenerado = newSaldo;\r\n        this.selectedCarton = null;\r\n        await this.loadCartons();\r\n      } catch (error) {\r\n        console.error('Error al vender el cartón:', error);\r\n        alert('Error al vender el cartón: ' + error.message);\r\n      }\r\n    },\r\n    cancelSale() {\r\n      this.selectedCarton = null;\r\n    },\r\n    handleImageError(carton) {\r\n      console.error(`Error al cargar la imagen del cartón ${carton.serial}:`, carton.imageUrl);\r\n      carton.imageUrl = null;\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Animación de fade-in */\r\n.animate-fade-in {\r\n  animation: fadeIn 0.5s ease-out forwards;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n/* Animación de rotación para el spinner */\r\n.animate-spin {\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}