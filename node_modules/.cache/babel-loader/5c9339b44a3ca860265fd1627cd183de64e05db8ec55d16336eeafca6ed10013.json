{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { db } from '../firebase';\nimport { collection, query, where, getDocs, doc, updateDoc, onSnapshot } from 'firebase/firestore';\nimport jsQR from 'jsqr';\nexport default {\n  data() {\n    return {\n      sellerId: 'vendedor1',\n      // Cambia esto según el vendedor autenticado\n      sellerSaldo: 0,\n      assignedCartons: [],\n      soldCartons: [],\n      availableCartons: [],\n      scanning: false,\n      showScanner: false,\n      showActionButtons: false,\n      scanMessage: '',\n      errorMessage: false,\n      successMessage: false,\n      manualSerial: '',\n      video: null,\n      canvas: null,\n      stream: null\n    };\n  },\n  async mounted() {\n    await this.loadSellerData();\n    this.video = this.$refs.video;\n    this.canvas = this.$refs.canvas.getContext('2d');\n    this.loadSellerBalance();\n  },\n  beforeUnmount() {\n    if (this.stream) {\n      this.stream.getTracks().forEach(track => track.stop());\n    }\n  },\n  methods: {\n    async loadSellerData() {\n      try {\n        // Cartones asignados\n        const assignedQuery = query(collection(db, 'cartones'), where('vendedorId', '==', this.sellerId), where('estado', '==', 'asignado'));\n        onSnapshot(assignedQuery, snapshot => {\n          this.assignedCartons = snapshot.docs.map(doc => ({\n            id: doc.id,\n            serial: doc.data().serial\n          })).sort((a, b) => parseInt(a.serial.replace('LM', '')) - parseInt(b.serial.replace('LM', '')));\n        });\n\n        // Cartones vendidos\n        const soldQuery = query(collection(db, 'cartones'), where('vendedorId', '==', this.sellerId), where('estado', '==', 'vendido'));\n        onSnapshot(soldQuery, snapshot => {\n          this.soldCartons = snapshot.docs.map(doc => ({\n            id: doc.id,\n            serial: doc.data().serial\n          })).sort((a, b) => parseInt(a.serial.replace('LM', '')) - parseInt(b.serial.replace('LM', '')));\n        });\n\n        // Cartones disponibles (global)\n        const availableQuery = query(collection(db, 'cartones'), where('vendedorId', '==', null), where('estado', '==', 'disponible'));\n        onSnapshot(availableQuery, snapshot => {\n          this.availableCartons = snapshot.docs.map(doc => ({\n            id: doc.id,\n            serial: doc.data().serial\n          })).sort((a, b) => parseInt(a.serial.replace('LM', '')) - parseInt(b.serial.replace('LM', '')));\n        });\n      } catch (error) {\n        console.error('Error al cargar datos del vendedor:', error);\n        alert('Error al cargar datos: ' + error.message);\n      }\n    },\n    loadSellerBalance() {\n      const sellerRef = doc(db, 'vendedores', this.sellerId);\n      onSnapshot(sellerRef, docSnapshot => {\n        this.sellerSaldo = docSnapshot.data()?.saldoGenerado || 0;\n      }, error => {\n        console.error('Error al cargar saldo:', error);\n        alert('Error al cargar saldo: ' + error.message);\n      });\n    },\n    async startQRScanner() {\n      if (this.scanning) return;\n      this.scanning = true;\n      this.showScanner = true;\n      this.scanMessage = '';\n      this.errorMessage = false;\n      this.successMessage = false;\n      this.showActionButtons = false;\n      try {\n        this.stream = await navigator.mediaDevices.getUserMedia({\n          video: {\n            facingMode: 'environment'\n          }\n        });\n        this.video.srcObject = this.stream;\n        this.video.play();\n        this.scanQRCode();\n      } catch (error) {\n        console.error('Error al acceder a la cámara:', error);\n        this.scanMessage = 'Error al acceder a la cámara: ' + error.message;\n        this.errorMessage = true;\n        this.scanning = false;\n      }\n    },\n    scanQRCode() {\n      if (this.video.readyState === this.video.HAVE_ENOUGH_DATA) {\n        this.canvas.drawImage(this.video, 0, 0, this.canvas.canvas.width, this.canvas.canvas.height);\n        const imageData = this.canvas.getImageData(0, 0, this.canvas.canvas.width, this.canvas.canvas.height);\n        const code = jsQR(imageData.data, imageData.width, imageData.height);\n        if (code) {\n          this.processSerial(code.data);\n          this.stream.getTracks().forEach(track => track.stop());\n          this.scanning = false;\n        } else {\n          requestAnimationFrame(this.scanQRCode);\n        }\n      } else {\n        requestAnimationFrame(this.scanQRCode);\n      }\n    },\n    async processSerial(serial) {\n      const cartonDoc = await getDocs(query(collection(db, 'cartones'), where('serial', '==', serial)));\n      if (cartonDoc.empty) {\n        this.scanMessage = 'Cartón no encontrado.';\n        this.errorMessage = true;\n        return;\n      }\n      const cartonData = cartonDoc.docs[0].data();\n      const cartonState = cartonData.estado;\n      const cartonId = cartonDoc.docs[0].id;\n      if (cartonState === 'vendido') {\n        this.scanMessage = 'Cartón ya vendido.';\n        this.errorMessage = true;\n      } else if (cartonState === 'disponible' || cartonState === 'asignado' && cartonData.vendedorId === this.sellerId) {\n        this.scanMessage = `Cartón ${serial} encontrado. ¿Deseas venderlo?`;\n        this.showActionButtons = true;\n      }\n    },\n    async sellCarton() {\n      if (!this.scanMessage.includes('encontrado')) return;\n      const serial = this.scanMessage.match(/Cartón (\\w+)/)[1];\n      const cartonDoc = await getDocs(query(collection(db, 'cartones'), where('serial', '==', serial)));\n      const cartonId = cartonDoc.docs[0].id;\n      try {\n        await updateDoc(doc(db, 'cartones', cartonId), {\n          estado: 'vendido'\n        });\n        const sellerRef = doc(db, 'vendedores', this.sellerId);\n        const currentSaldo = this.sellerSaldo;\n        await updateDoc(sellerRef, {\n          saldoGenerado: currentSaldo + 1\n        });\n        this.scanMessage = `Cartón ${serial} vendido exitosamente.`;\n        this.successMessage = true;\n        this.showActionButtons = false;\n        this.loadSellerData();\n        this.loadSellerBalance();\n      } catch (error) {\n        console.error('Error al vender el cartón:', error);\n        this.scanMessage = 'Error al vender el cartón: ' + error.message;\n        this.errorMessage = true;\n      }\n    },\n    cancelScan() {\n      if (this.stream) this.stream.getTracks().forEach(track => track.stop());\n      this.scanning = false;\n      this.showScanner = false;\n      this.scanMessage = '';\n      this.showActionButtons = false;\n    },\n    processManualSerial() {\n      if (this.manualSerial) {\n        this.processSerial(this.manualSerial);\n        this.manualSerial = '';\n      }\n    }\n  }\n};","map":{"version":3,"names":["db","collection","query","where","getDocs","doc","updateDoc","onSnapshot","jsQR","data","sellerId","sellerSaldo","assignedCartons","soldCartons","availableCartons","scanning","showScanner","showActionButtons","scanMessage","errorMessage","successMessage","manualSerial","video","canvas","stream","mounted","loadSellerData","$refs","getContext","loadSellerBalance","beforeUnmount","getTracks","forEach","track","stop","methods","assignedQuery","snapshot","docs","map","id","serial","sort","a","b","parseInt","replace","soldQuery","availableQuery","error","console","alert","message","sellerRef","docSnapshot","saldoGenerado","startQRScanner","navigator","mediaDevices","getUserMedia","facingMode","srcObject","play","scanQRCode","readyState","HAVE_ENOUGH_DATA","drawImage","width","height","imageData","getImageData","code","processSerial","requestAnimationFrame","cartonDoc","empty","cartonData","cartonState","estado","cartonId","vendedorId","sellCarton","includes","match","currentSaldo","cancelScan","processManualSerial"],"sources":["D:\\Lotweb\\venta-cartones\\src\\components\\SellerDashboard.vue"],"sourcesContent":["```vue\r\n<template>\r\n  <div class=\"bg-white p-6 rounded-lg shadow-md\">\r\n    <h2 class=\"text-xl font-semibold text-gray-800 mb-4\">Dashboard del Vendedor</h2>\r\n\r\n    <!-- Estadísticas -->\r\n    <div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\r\n      <div class=\"bg-gray-100 p-4 rounded-lg text-center\">\r\n        <p class=\"text-gray-600\">Saldo</p>\r\n        <p class=\"text-2xl font-bold text-green-600\">${{ sellerSaldo }}</p>\r\n      </div>\r\n      <div class=\"bg-gray-100 p-4 rounded-lg text-center\">\r\n        <p class=\"text-gray-600\">Cartones Asignados</p>\r\n        <p class=\"text-2xl font-bold text-blue-600\">{{ assignedCartons.length }}</p>\r\n      </div>\r\n      <div class=\"bg-gray-100 p-4 rounded-lg text-center\">\r\n        <p class=\"text-gray-600\">Cartones Vendidos</p>\r\n        <p class=\"text-2xl font-bold text-red-600\">{{ soldCartons.length }}</p>\r\n      </div>\r\n      <div class=\"bg-gray-100 p-4 rounded-lg text-center\">\r\n        <p class=\"text-gray-600\">Cartones Disponibles</p>\r\n        <p class=\"text-2xl font-bold text-purple-600\">{{ availableCartons.length }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Botón para Vender Cartón -->\r\n    <div class=\"mb-4\">\r\n      <button\r\n        @click=\"startQRScanner\"\r\n        class=\"bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 transition\"\r\n        :disabled=\"scanning\"\r\n      >\r\n        <span v-if=\"scanning\">\r\n          <svg class=\"animate-spin h-5 w-5 mr-2 inline-block\" viewBox=\"0 0 24 24\">\r\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n          </svg>\r\n          Escaneando...\r\n        </span>\r\n        <span v-else>Escanear QR para Vender</span>\r\n      </button>\r\n      <input\r\n        v-model=\"manualSerial\"\r\n        type=\"text\"\r\n        placeholder=\"Ingresar Serial Manualmente\"\r\n        class=\"mt-2 block w-full px-4 py-2 border border-gray-300 rounded-lg shadow-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-300\"\r\n        @keyup.enter=\"processManualSerial\"\r\n      />\r\n    </div>\r\n\r\n    <!-- Escáner de QR -->\r\n    <div v-if=\"showScanner\" class=\"relative\">\r\n      <video ref=\"video\" autoplay playsinline class=\"w-full max-w-md rounded-lg\"></video>\r\n      <canvas ref=\"canvas\" class=\"absolute top-0 left-0 w-full max-w-md opacity-0\"></canvas>\r\n      <p v-if=\"scanMessage\" class=\"mt-2 text-center text-lg font-medium\" :class=\"{ 'text-red-600': errorMessage, 'text-green-600': successMessage }\">\r\n        {{ scanMessage }}\r\n      </p>\r\n      <div v-if=\"showActionButtons\" class=\"mt-4 text-center\">\r\n        <button @click=\"sellCarton\" class=\"bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 mr-2\">Vender</button>\r\n        <button @click=\"cancelScan\" class=\"bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-600\">Cancelar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { db } from '../firebase';\r\nimport { collection, query, where, getDocs, doc, updateDoc, onSnapshot } from 'firebase/firestore';\r\nimport jsQR from 'jsqr';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      sellerId: 'vendedor1', // Cambia esto según el vendedor autenticado\r\n      sellerSaldo: 0,\r\n      assignedCartons: [],\r\n      soldCartons: [],\r\n      availableCartons: [],\r\n      scanning: false,\r\n      showScanner: false,\r\n      showActionButtons: false,\r\n      scanMessage: '',\r\n      errorMessage: false,\r\n      successMessage: false,\r\n      manualSerial: '',\r\n      video: null,\r\n      canvas: null,\r\n      stream: null\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.loadSellerData();\r\n    this.video = this.$refs.video;\r\n    this.canvas = this.$refs.canvas.getContext('2d');\r\n    this.loadSellerBalance();\r\n  },\r\n  beforeUnmount() {\r\n    if (this.stream) {\r\n      this.stream.getTracks().forEach(track => track.stop());\r\n    }\r\n  },\r\n  methods: {\r\n    async loadSellerData() {\r\n      try {\r\n        // Cartones asignados\r\n        const assignedQuery = query(\r\n          collection(db, 'cartones'),\r\n          where('vendedorId', '==', this.sellerId),\r\n          where('estado', '==', 'asignado')\r\n        );\r\n        onSnapshot(assignedQuery, (snapshot) => {\r\n          this.assignedCartons = snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            serial: doc.data().serial\r\n          })).sort((a, b) => parseInt(a.serial.replace('LM', '')) - parseInt(b.serial.replace('LM', '')));\r\n        });\r\n\r\n        // Cartones vendidos\r\n        const soldQuery = query(\r\n          collection(db, 'cartones'),\r\n          where('vendedorId', '==', this.sellerId),\r\n          where('estado', '==', 'vendido')\r\n        );\r\n        onSnapshot(soldQuery, (snapshot) => {\r\n          this.soldCartons = snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            serial: doc.data().serial\r\n          })).sort((a, b) => parseInt(a.serial.replace('LM', '')) - parseInt(b.serial.replace('LM', '')));\r\n        });\r\n\r\n        // Cartones disponibles (global)\r\n        const availableQuery = query(\r\n          collection(db, 'cartones'),\r\n          where('vendedorId', '==', null),\r\n          where('estado', '==', 'disponible')\r\n        );\r\n        onSnapshot(availableQuery, (snapshot) => {\r\n          this.availableCartons = snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            serial: doc.data().serial\r\n          })).sort((a, b) => parseInt(a.serial.replace('LM', '')) - parseInt(b.serial.replace('LM', '')));\r\n        });\r\n      } catch (error) {\r\n        console.error('Error al cargar datos del vendedor:', error);\r\n        alert('Error al cargar datos: ' + error.message);\r\n      }\r\n    },\r\n    loadSellerBalance() {\r\n      const sellerRef = doc(db, 'vendedores', this.sellerId);\r\n      onSnapshot(sellerRef, (docSnapshot) => {\r\n        this.sellerSaldo = docSnapshot.data()?.saldoGenerado || 0;\r\n      }, (error) => {\r\n        console.error('Error al cargar saldo:', error);\r\n        alert('Error al cargar saldo: ' + error.message);\r\n      });\r\n    },\r\n    async startQRScanner() {\r\n      if (this.scanning) return;\r\n      this.scanning = true;\r\n      this.showScanner = true;\r\n      this.scanMessage = '';\r\n      this.errorMessage = false;\r\n      this.successMessage = false;\r\n      this.showActionButtons = false;\r\n\r\n      try {\r\n        this.stream = await navigator.mediaDevices.getUserMedia({ video: { facingMode: 'environment' } });\r\n        this.video.srcObject = this.stream;\r\n        this.video.play();\r\n        this.scanQRCode();\r\n      } catch (error) {\r\n        console.error('Error al acceder a la cámara:', error);\r\n        this.scanMessage = 'Error al acceder a la cámara: ' + error.message;\r\n        this.errorMessage = true;\r\n        this.scanning = false;\r\n      }\r\n    },\r\n    scanQRCode() {\r\n      if (this.video.readyState === this.video.HAVE_ENOUGH_DATA) {\r\n        this.canvas.drawImage(this.video, 0, 0, this.canvas.canvas.width, this.canvas.canvas.height);\r\n        const imageData = this.canvas.getImageData(0, 0, this.canvas.canvas.width, this.canvas.canvas.height);\r\n        const code = jsQR(imageData.data, imageData.width, imageData.height);\r\n\r\n        if (code) {\r\n          this.processSerial(code.data);\r\n          this.stream.getTracks().forEach(track => track.stop());\r\n          this.scanning = false;\r\n        } else {\r\n          requestAnimationFrame(this.scanQRCode);\r\n        }\r\n      } else {\r\n        requestAnimationFrame(this.scanQRCode);\r\n      }\r\n    },\r\n    async processSerial(serial) {\r\n      const cartonDoc = await getDocs(query(collection(db, 'cartones'), where('serial', '==', serial)));\r\n      if (cartonDoc.empty) {\r\n        this.scanMessage = 'Cartón no encontrado.';\r\n        this.errorMessage = true;\r\n        return;\r\n      }\r\n\r\n      const cartonData = cartonDoc.docs[0].data();\r\n      const cartonState = cartonData.estado;\r\n      const cartonId = cartonDoc.docs[0].id;\r\n\r\n      if (cartonState === 'vendido') {\r\n        this.scanMessage = 'Cartón ya vendido.';\r\n        this.errorMessage = true;\r\n      } else if (cartonState === 'disponible' || (cartonState === 'asignado' && cartonData.vendedorId === this.sellerId)) {\r\n        this.scanMessage = `Cartón ${serial} encontrado. ¿Deseas venderlo?`;\r\n        this.showActionButtons = true;\r\n      }\r\n    },\r\n    async sellCarton() {\r\n      if (!this.scanMessage.includes('encontrado')) return;\r\n      const serial = this.scanMessage.match(/Cartón (\\w+)/)[1];\r\n      const cartonDoc = await getDocs(query(collection(db, 'cartones'), where('serial', '==', serial)));\r\n      const cartonId = cartonDoc.docs[0].id;\r\n\r\n      try {\r\n        await updateDoc(doc(db, 'cartones', cartonId), { estado: 'vendido' });\r\n        const sellerRef = doc(db, 'vendedores', this.sellerId);\r\n        const currentSaldo = this.sellerSaldo;\r\n        await updateDoc(sellerRef, { saldoGenerado: currentSaldo + 1 });\r\n\r\n        this.scanMessage = `Cartón ${serial} vendido exitosamente.`;\r\n        this.successMessage = true;\r\n        this.showActionButtons = false;\r\n        this.loadSellerData();\r\n        this.loadSellerBalance();\r\n      } catch (error) {\r\n        console.error('Error al vender el cartón:', error);\r\n        this.scanMessage = 'Error al vender el cartón: ' + error.message;\r\n        this.errorMessage = true;\r\n      }\r\n    },\r\n    cancelScan() {\r\n      if (this.stream) this.stream.getTracks().forEach(track => track.stop());\r\n      this.scanning = false;\r\n      this.showScanner = false;\r\n      this.scanMessage = '';\r\n      this.showActionButtons = false;\r\n    },\r\n    processManualSerial() {\r\n      if (this.manualSerial) {\r\n        this.processSerial(this.manualSerial);\r\n        this.manualSerial = '';\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Tailwind maneja los estilos */\r\n</style>\r\n```"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}