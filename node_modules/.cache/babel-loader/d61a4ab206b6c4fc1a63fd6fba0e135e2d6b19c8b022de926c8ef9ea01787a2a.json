{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"bg-white p-6 rounded-lg shadow-md mb-6\"\n};\nconst _hoisted_2 = {\n  class: \"flex flex-col items-center\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"mt-4\"\n};\nconst _hoisted_4 = {\n  class: \"mt-2\"\n};\nconst _hoisted_5 = [\"href\"];\nconst _hoisted_6 = {\n  key: 1,\n  class: \"mt-4\"\n};\nconst _hoisted_7 = {\n  class: \"mt-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", {\n    class: \"text-2xl font-semibold text-gray-800 mb-4\"\n  }, \"Subir Cartones\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.onFileChange && $options.onFileChange(...args)),\n    accept: \"image/*\",\n    multiple: \"\",\n    class: \"mb-4 p-2 border rounded-md w-full max-w-md\"\n  }, null, 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.checkAndUploadImages && $options.checkAndUploadImages(...args)),\n    class: \"bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 transition\"\n  }, \" Subir Imágenes \")]), $data.uploadedUrls.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", {\n    class: \"text-lg font-medium text-gray-700\"\n  }, \"Imágenes subidas:\", -1 /* HOISTED */)), _createElementVNode(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.uploadedUrls, (url, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: \"text-blue-600\"\n    }, [_createElementVNode(\"a\", {\n      href: url,\n      target: \"_blank\",\n      class: \"hover:underline\"\n    }, _toDisplayString(url), 9 /* TEXT, PROPS */, _hoisted_5)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), $data.duplicates.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", {\n    class: \"text-lg font-medium text-red-600\"\n  }, \"Archivos ya existentes:\", -1 /* HOISTED */)), _createElementVNode(\"ul\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.duplicates, duplicate => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: duplicate,\n      class: \"text-red-600\"\n    }, _toDisplayString(duplicate), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","type","onChange","_cache","args","$options","onFileChange","accept","multiple","onClick","checkAndUploadImages","$data","uploadedUrls","length","_hoisted_3","_hoisted_4","_Fragment","_renderList","url","index","href","target","_hoisted_5","_createCommentVNode","duplicates","_hoisted_6","_hoisted_7","duplicate"],"sources":["D:\\Lotweb\\venta-cartones\\src\\components\\UploadCarton.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-white p-6 rounded-lg shadow-md mb-6\">\r\n    <h2 class=\"text-2xl font-semibold text-gray-800 mb-4\">Subir Cartones</h2>\r\n    <div class=\"flex flex-col items-center\">\r\n      <input\r\n        type=\"file\"\r\n        @change=\"onFileChange\"\r\n        accept=\"image/*\"\r\n        multiple\r\n        class=\"mb-4 p-2 border rounded-md w-full max-w-md\"\r\n      />\r\n      <button\r\n        @click=\"checkAndUploadImages\"\r\n        class=\"bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 transition\"\r\n      >\r\n        Subir Imágenes\r\n      </button>\r\n    </div>\r\n    <div v-if=\"uploadedUrls.length > 0\" class=\"mt-4\">\r\n      <h3 class=\"text-lg font-medium text-gray-700\">Imágenes subidas:</h3>\r\n      <ul class=\"mt-2\">\r\n        <li v-for=\"(url, index) in uploadedUrls\" :key=\"index\" class=\"text-blue-600\">\r\n          <a :href=\"url\" target=\"_blank\" class=\"hover:underline\">{{ url }}</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div v-if=\"duplicates.length > 0\" class=\"mt-4\">\r\n      <h3 class=\"text-lg font-medium text-red-600\">Archivos ya existentes:</h3>\r\n      <ul class=\"mt-2\">\r\n        <li v-for=\"duplicate in duplicates\" :key=\"duplicate\" class=\"text-red-600\">{{ duplicate }}</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedFiles: [],\r\n      uploadedUrls: [],\r\n      duplicates: [],\r\n      cloudinaryUrl: 'https://api.cloudinary.com/v1_1/dardyvsja/image/upload',\r\n      uploadPreset: 'cartones_upload'\r\n    };\r\n  },\r\n  methods: {\r\n    onFileChange(event) {\r\n      this.selectedFiles = Array.from(event.target.files);\r\n      this.uploadedUrls = [];\r\n      this.duplicates = [];\r\n    },\r\n    async checkAndUploadImages() {\r\n      if (this.selectedFiles.length === 0) {\r\n        alert('Por favor, selecciona al menos una imagen.');\r\n        return;\r\n      }\r\n\r\n      const serials = this.selectedFiles.map(file => file.name.split('.')[0]);\r\n      this.$emit('check-duplicates', { serials, files: this.selectedFiles }, async (nonDuplicates) => {\r\n        if (nonDuplicates.length === 0) {\r\n          alert('Todos los archivos seleccionados ya existen.');\r\n          return;\r\n        }\r\n\r\n        this.uploadedUrls = [];\r\n        this.duplicates = this.selectedFiles\r\n          .filter(file => !nonDuplicates.some(nd => nd.name === file.name))\r\n          .map(file => file.name);\r\n\r\n        const uploadPromises = nonDuplicates.map(async (file) => {\r\n          const serial = file.name.split('.')[0];\r\n          const formData = new FormData();\r\n          formData.append('file', file);\r\n          formData.append('upload_preset', this.uploadPreset);\r\n\r\n          try {\r\n            const response = await fetch(this.cloudinaryUrl, {\r\n              method: 'POST',\r\n              body: formData\r\n            });\r\n            const data = await response.json();\r\n            if (data.secure_url) {\r\n              this.uploadedUrls.push(data.secure_url);\r\n              return { serial, imageUrl: data.secure_url };\r\n            } else {\r\n              throw new Error(`Error al subir ${file.name}: ${JSON.stringify(data)}`);\r\n            }\r\n          } catch (error) {\r\n            console.error(`Error al subir ${file.name}:`, error);\r\n            return null;\r\n          }\r\n        });\r\n\r\n        try {\r\n          const results = await Promise.all(uploadPromises);\r\n          const validResults = results.filter(result => result !== null);\r\n          if (validResults.length > 0) {\r\n            this.$emit('images-uploaded', validResults);\r\n            alert(`${validResults.length} de ${nonDuplicates.length} imágenes subidas correctamente.`);\r\n          } else {\r\n            alert('No se subieron imágenes correctamente.');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error en el proceso de subida:', error);\r\n          alert('Error en el proceso de subida: ' + error.message);\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Tailwind maneja los estilos */\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAwC;;EAE5CA,KAAK,EAAC;AAA4B;;EAH3CC,GAAA;EAkBwCD,KAAK,EAAC;;;EAEpCA,KAAK,EAAC;AAAM;mBApBtB;;EAAAC,GAAA;EA0BsCD,KAAK,EAAC;;;EAElCA,KAAK,EAAC;AAAM;;uBA3BpBE,mBAAA,CA+BM,OA/BNC,UA+BM,G,0BA9BJC,mBAAA,CAAyE;IAArEJ,KAAK,EAAC;EAA2C,GAAC,gBAAc,sBACpEI,mBAAA,CAcM,OAdNC,UAcM,GAbJD,mBAAA,CAME;IALAE,IAAI,EAAC,MAAM;IACVC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IACrBG,MAAM,EAAC,SAAS;IAChBC,QAAQ,EAAR,EAAQ;IACRb,KAAK,EAAC;qCAERI,mBAAA,CAKS;IAJNU,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAK,oBAAA,IAAAL,QAAA,CAAAK,oBAAA,IAAAN,IAAA,CAAoB;IAC5BT,KAAK,EAAC;KACP,kBAED,E,GAESgB,KAAA,CAAAC,YAAY,CAACC,MAAM,Q,cAA9BhB,mBAAA,CAOM,OAPNiB,UAOM,G,0BANJf,mBAAA,CAAoE;IAAhEJ,KAAK,EAAC;EAAmC,GAAC,mBAAiB,sBAC/DI,mBAAA,CAIK,MAJLgB,UAIK,I,kBAHHlB,mBAAA,CAEKmB,SAAA,QAvBbC,WAAA,CAqBmCN,KAAA,CAAAC,YAAY,EArB/C,CAqBoBM,GAAG,EAAEC,KAAK;yBAAtBtB,mBAAA,CAEK;MAFqCD,GAAG,EAAEuB,KAAK;MAAExB,KAAK,EAAC;QAC1DI,mBAAA,CAAoE;MAAhEqB,IAAI,EAAEF,GAAG;MAAEG,MAAM,EAAC,QAAQ;MAAC1B,KAAK,EAAC;wBAAqBuB,GAAG,wBAtBvEI,UAAA,E;wCAAAC,mBAAA,gBA0BeZ,KAAA,CAAAa,UAAU,CAACX,MAAM,Q,cAA5BhB,mBAAA,CAKM,OALN4B,UAKM,G,0BAJJ1B,mBAAA,CAAyE;IAArEJ,KAAK,EAAC;EAAkC,GAAC,yBAAuB,sBACpEI,mBAAA,CAEK,MAFL2B,UAEK,I,kBADH7B,mBAAA,CAA8FmB,SAAA,QA7BtGC,WAAA,CA6BgCN,KAAA,CAAAa,UAAU,EAAvBG,SAAS;yBAApB9B,mBAAA,CAA8F;MAAzDD,GAAG,EAAE+B,SAAS;MAAEhC,KAAK,EAAC;wBAAkBgC,SAAS;wCA7B9FJ,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}