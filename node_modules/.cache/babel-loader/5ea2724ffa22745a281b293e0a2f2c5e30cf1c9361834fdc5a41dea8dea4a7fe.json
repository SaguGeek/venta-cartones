{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { db } from '../firebase';\nimport { collection, query, where, onSnapshot, doc, updateDoc, getDocs } from 'firebase/firestore';\nimport { auth } from '../firebase';\nexport default {\n  data() {\n    return {\n      availableCartons: [],\n      soldCartons: [],\n      saldoGenerado: 0,\n      selectedCarton: null,\n      manualSerial: '',\n      scanning: false,\n      unsubscribeAvailable: null,\n      unsubscribeSold: null,\n      stream: null\n    };\n  },\n  async mounted() {\n    await this.loadCartons();\n    this.loadUserData();\n  },\n  beforeUnmount() {\n    if (this.unsubscribeAvailable) this.unsubscribeAvailable();\n    if (this.unsubscribeSold) this.unsubscribeSold();\n    if (this.stream) {\n      this.stream.getTracks().forEach(track => track.stop());\n    }\n  },\n  methods: {\n    async loadCartons() {\n      const user = auth.currentUser;\n      if (!user) return;\n      const assignedQuery = query(collection(db, 'cartones'), where('vendedorId', '==', user.uid), where('estado', '==', 'asignado'));\n      this.unsubscribeAvailable = onSnapshot(assignedQuery, snapshot => {\n        this.availableCartons = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n      }, error => console.error('Error al cargar cartones disponibles:', error));\n      const soldQuery = query(collection(db, 'cartones'), where('vendedorId', '==', user.uid), where('estado', '==', 'vendido'));\n      this.unsubscribeSold = onSnapshot(soldQuery, snapshot => {\n        this.soldCartons = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n      }, error => console.error('Error al cargar cartones vendidos:', error));\n    },\n    async loadUserData() {\n      const user = auth.currentUser;\n      if (!user) return;\n      const userRef = doc(db, 'vendedores', user.uid);\n      onSnapshot(userRef, docSnap => {\n        this.saldoGenerado = docSnap.data().saldoGenerado || 0;\n      }, error => console.error('Error al cargar datos del vendedor:', error));\n    },\n    async startQRScanner() {\n      this.scanning = true;\n      const video = this.$refs.video;\n      const canvas = this.$refs.canvas;\n      try {\n        this.stream = await navigator.mediaDevices.getUserMedia({\n          video: {\n            facingMode: 'environment'\n          }\n        });\n        video.srcObject = this.stream;\n        video.play();\n        const tick = () => {\n          if (video.readyState === video.HAVE_ENOUGH_DATA) {\n            canvas.height = video.videoHeight;\n            canvas.width = video.videoWidth;\n            const context = canvas.getContext('2d');\n            context.drawImage(video, 0, 0, canvas.width, canvas.height);\n            const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n            const code = window.jsQR(imageData.data, imageData.width, imageData.height);\n            if (code) {\n              this.manualSerial = code.data;\n              this.checkCarton();\n              this.stopQRScanner();\n            }\n          }\n          if (this.scanning) requestAnimationFrame(tick);\n        };\n        requestAnimationFrame(tick);\n      } catch (error) {\n        console.error('Error al acceder a la cámara:', error);\n        alert('No se pudo acceder a la cámara. Asegúrate de otorgar permisos.');\n        this.scanning = false;\n      }\n    },\n    stopQRScanner() {\n      if (this.stream) {\n        this.stream.getTracks().forEach(track => track.stop());\n      }\n      this.scanning = false;\n      this.$refs.video.srcObject = null;\n    },\n    async checkCarton() {\n      const serial = this.manualSerial.trim();\n      if (!serial) return;\n      const cartonQuery = query(collection(db, 'cartones'), where('serial', '==', serial), where('vendedorId', '==', auth.currentUser.uid), where('estado', '==', 'asignado'));\n      const snapshot = await getDocs(cartonQuery);\n      if (!snapshot.empty) {\n        this.selectedCarton = {\n          id: snapshot.docs[0].id,\n          ...snapshot.docs[0].data()\n        };\n        this.manualSerial = '';\n      } else {\n        alert('Cartón no encontrado o no disponible para este vendedor.');\n        this.manualSerial = '';\n      }\n    },\n    async confirmSale() {\n      if (!this.selectedCarton) return;\n      try {\n        const cartonRef = doc(db, 'cartones', this.selectedCarton.id);\n        await updateDoc(cartonRef, {\n          estado: 'vendido'\n        });\n        const sellerRef = doc(db, 'vendedores', auth.currentUser.uid);\n        const newSaldo = this.saldoGenerado + 5;\n        await updateDoc(sellerRef, {\n          saldoGenerado: newSaldo\n        });\n        this.saldoGenerado = newSaldo;\n        this.selectedCarton = null;\n        await this.loadCartons();\n      } catch (error) {\n        console.error('Error al vender el cartón:', error);\n        alert('Error al vender el cartón: ' + error.message);\n      }\n    },\n    cancelSale() {\n      this.selectedCarton = null;\n    },\n    handleImageError(carton) {\n      console.error(`Error al cargar la imagen del cartón ${carton.serial}:`, carton.imageUrl);\n      carton.imageUrl = null;\n    }\n  }\n};","map":{"version":3,"names":["db","collection","query","where","onSnapshot","doc","updateDoc","getDocs","auth","data","availableCartons","soldCartons","saldoGenerado","selectedCarton","manualSerial","scanning","unsubscribeAvailable","unsubscribeSold","stream","mounted","loadCartons","loadUserData","beforeUnmount","getTracks","forEach","track","stop","methods","user","currentUser","assignedQuery","uid","snapshot","docs","map","id","error","console","soldQuery","userRef","docSnap","startQRScanner","video","$refs","canvas","navigator","mediaDevices","getUserMedia","facingMode","srcObject","play","tick","readyState","HAVE_ENOUGH_DATA","height","videoHeight","width","videoWidth","context","getContext","drawImage","imageData","getImageData","code","window","jsQR","checkCarton","stopQRScanner","requestAnimationFrame","alert","serial","trim","cartonQuery","empty","confirmSale","cartonRef","estado","sellerRef","newSaldo","message","cancelSale","handleImageError","carton","imageUrl"],"sources":["D:\\Lotweb\\venta-cartones\\src\\components\\SellerDashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gradient-to-br from-indigo-100 to-purple-200 p-6\">\r\n    <h1 class=\"text-3xl font-bold text-gray-900 mb-8 text-center animate-fade-in\">Dashboard del Vendedor</h1>\r\n\r\n    <!-- Estadísticas -->\r\n    <div class=\"bg-white p-6 rounded-xl shadow-lg mb-8 grid grid-cols-1 sm:grid-cols-3 gap-6\">\r\n      <div class=\"text-center p-4 bg-blue-50 rounded-lg transition-transform hover:scale-105\">\r\n        <p class=\"text-gray-600 font-medium\">Cartones Disponibles</p>\r\n        <p class=\"text-3xl font-bold text-blue-600 mt-2\">{{ availableCartons.length }}</p>\r\n      </div>\r\n      <div class=\"text-center p-4 bg-green-50 rounded-lg transition-transform hover:scale-105\">\r\n        <p class=\"text-gray-600 font-medium\">Cartones Vendidos</p>\r\n        <p class=\"text-3xl font-bold text-green-600 mt-2\">{{ soldCartons.length }}</p>\r\n      </div>\r\n      <div class=\"text-center p-4 bg-purple-50 rounded-lg transition-transform hover:scale-105\">\r\n        <p class=\"text-gray-600 font-medium\">Saldo Generado ($)</p>\r\n        <p class=\"text-3xl font-bold text-purple-600 mt-2\">{{ saldoGenerado }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Lista de Cartones Disponibles -->\r\n    <div class=\"bg-white p-6 rounded-xl shadow-lg mb-8\">\r\n      <h2 class=\"text-2xl font-semibold text-gray-800 mb-6\">Cartones Disponibles</h2>\r\n      <div v-if=\"availableCartons.length === 0\" class=\"text-gray-600 text-center py-4\">No hay cartones disponibles.</div>\r\n      <div v-else class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\r\n        <div v-for=\"carton in availableCartons\" :key=\"carton.id\" class=\"bg-white border-2 border-gray-200 rounded-lg shadow-md hover:shadow-xl transition-shadow duration-300 overflow-hidden\">\r\n          <img :src=\"carton.imageUrl\" :alt=\"'Cartón ' + carton.serial\" class=\"w-full h-40 object-cover\" @error=\"handleImageError(carton)\" />\r\n          <div class=\"p-4\">\r\n            <p class=\"text-gray-800 font-medium text-center\">Serial: {{ carton.serial }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Controles para Vender -->\r\n    <div class=\"bg-white p-6 rounded-xl shadow-lg\">\r\n      <h2 class=\"text-2xl font-semibold text-gray-800 mb-6\">Vender Cartón</h2>\r\n      <div class=\"flex flex-col sm:flex-row gap-4 mb-6\">\r\n        <button\r\n          @click=\"startQRScanner\"\r\n          class=\"bg-indigo-600 text-white px-6 py-3 rounded-lg hover:bg-indigo-700 transition duration-300 flex items-center justify-center w-full sm:w-auto\"\r\n          :disabled=\"scanning\"\r\n        >\r\n          <span v-if=\"scanning\" class=\"flex items-center\">\r\n            <svg class=\"animate-spin h-5 w-5 mr-2 text-white\" viewBox=\"0 0 24 24\">\r\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n            </svg>\r\n            Escaneando...\r\n          </span>\r\n          <span v-else>Escanear QR</span>\r\n        </button>\r\n        <input\r\n          v-model=\"manualSerial\"\r\n          type=\"text\"\r\n          placeholder=\"Ingresar Serial Manualmente\"\r\n          class=\"border border-gray-300 px-4 py-3 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition duration-300 w-full sm:w-1/2\"\r\n          @keyup.enter=\"checkCarton\"\r\n        />\r\n      </div>\r\n\r\n      <!-- Modal para Confirmación de Venta -->\r\n      <div v-if=\"selectedCarton\" class=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 animate-fade-in\">\r\n        <div class=\"bg-white p-6 rounded-xl shadow-2xl max-w-lg w-full transform transition-all duration-300 hover:scale-105\">\r\n          <h3 class=\"text-2xl font-semibold text-gray-800 mb-4 text-center\">Confirmar Venta</h3>\r\n          <img :src=\"selectedCarton.imageUrl\" :alt=\"'Cartón ' + selectedCarton.serial\" class=\"w-full h-48 object-cover rounded-lg mb-4\" @error=\"handleImageError(selectedCarton)\" />\r\n          <p class=\"text-gray-800 font-medium text-center\">Serial: {{ selectedCarton.serial }}</p>\r\n          <div class=\"mt-6 flex justify-center space-x-6\">\r\n            <button @click=\"cancelSale\" class=\"bg-gray-500 text-white px-6 py-2 rounded-lg hover:bg-gray-600 transition duration-300\">\r\n              Cancelar\r\n            </button>\r\n            <button @click=\"confirmSale\" class=\"bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition duration-300\">\r\n              Vender\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Video para Escaneo QR (oculto por defecto) -->\r\n      <div v-if=\"scanning\" class=\"relative mt-6\">\r\n        <video ref=\"video\" class=\"w-full max-w-md rounded-lg shadow-md\" autoplay></video>\r\n        <canvas ref=\"canvas\" class=\"hidden\"></canvas>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { db } from '../firebase';\r\nimport { collection, query, where, onSnapshot, doc, updateDoc, getDocs } from 'firebase/firestore';\r\nimport { auth } from '../firebase';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      availableCartons: [],\r\n      soldCartons: [],\r\n      saldoGenerado: 0,\r\n      selectedCarton: null,\r\n      manualSerial: '',\r\n      scanning: false,\r\n      unsubscribeAvailable: null,\r\n      unsubscribeSold: null,\r\n      stream: null\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.loadCartons();\r\n    this.loadUserData();\r\n  },\r\n  beforeUnmount() {\r\n    if (this.unsubscribeAvailable) this.unsubscribeAvailable();\r\n    if (this.unsubscribeSold) this.unsubscribeSold();\r\n    if (this.stream) {\r\n      this.stream.getTracks().forEach(track => track.stop());\r\n    }\r\n  },\r\n  methods: {\r\n    async loadCartons() {\r\n      const user = auth.currentUser;\r\n      if (!user) return;\r\n\r\n      const assignedQuery = query(\r\n        collection(db, 'cartones'),\r\n        where('vendedorId', '==', user.uid),\r\n        where('estado', '==', 'asignado')\r\n      );\r\n      this.unsubscribeAvailable = onSnapshot(assignedQuery, (snapshot) => {\r\n        this.availableCartons = snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n      }, (error) => console.error('Error al cargar cartones disponibles:', error));\r\n\r\n      const soldQuery = query(\r\n        collection(db, 'cartones'),\r\n        where('vendedorId', '==', user.uid),\r\n        where('estado', '==', 'vendido')\r\n      );\r\n      this.unsubscribeSold = onSnapshot(soldQuery, (snapshot) => {\r\n        this.soldCartons = snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n      }, (error) => console.error('Error al cargar cartones vendidos:', error));\r\n    },\r\n    async loadUserData() {\r\n      const user = auth.currentUser;\r\n      if (!user) return;\r\n\r\n      const userRef = doc(db, 'vendedores', user.uid);\r\n      onSnapshot(userRef, (docSnap) => {\r\n        this.saldoGenerado = docSnap.data().saldoGenerado || 0;\r\n      }, (error) => console.error('Error al cargar datos del vendedor:', error));\r\n    },\r\n    async startQRScanner() {\r\n      this.scanning = true;\r\n      const video = this.$refs.video;\r\n      const canvas = this.$refs.canvas;\r\n\r\n      try {\r\n        this.stream = await navigator.mediaDevices.getUserMedia({ video: { facingMode: 'environment' } });\r\n        video.srcObject = this.stream;\r\n        video.play();\r\n\r\n        const tick = () => {\r\n          if (video.readyState === video.HAVE_ENOUGH_DATA) {\r\n            canvas.height = video.videoHeight;\r\n            canvas.width = video.videoWidth;\r\n            const context = canvas.getContext('2d');\r\n            context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\r\n            const code = window.jsQR(imageData.data, imageData.width, imageData.height);\r\n            if (code) {\r\n              this.manualSerial = code.data;\r\n              this.checkCarton();\r\n              this.stopQRScanner();\r\n            }\r\n          }\r\n          if (this.scanning) requestAnimationFrame(tick);\r\n        };\r\n        requestAnimationFrame(tick);\r\n      } catch (error) {\r\n        console.error('Error al acceder a la cámara:', error);\r\n        alert('No se pudo acceder a la cámara. Asegúrate de otorgar permisos.');\r\n        this.scanning = false;\r\n      }\r\n    },\r\n    stopQRScanner() {\r\n      if (this.stream) {\r\n        this.stream.getTracks().forEach(track => track.stop());\r\n      }\r\n      this.scanning = false;\r\n      this.$refs.video.srcObject = null;\r\n    },\r\n    async checkCarton() {\r\n      const serial = this.manualSerial.trim();\r\n      if (!serial) return;\r\n\r\n      const cartonQuery = query(\r\n        collection(db, 'cartones'),\r\n        where('serial', '==', serial),\r\n        where('vendedorId', '==', auth.currentUser.uid),\r\n        where('estado', '==', 'asignado')\r\n      );\r\n      const snapshot = await getDocs(cartonQuery);\r\n      if (!snapshot.empty) {\r\n        this.selectedCarton = { id: snapshot.docs[0].id, ...snapshot.docs[0].data() };\r\n        this.manualSerial = '';\r\n      } else {\r\n        alert('Cartón no encontrado o no disponible para este vendedor.');\r\n        this.manualSerial = '';\r\n      }\r\n    },\r\n    async confirmSale() {\r\n      if (!this.selectedCarton) return;\r\n\r\n      try {\r\n        const cartonRef = doc(db, 'cartones', this.selectedCarton.id);\r\n        await updateDoc(cartonRef, { estado: 'vendido' });\r\n\r\n        const sellerRef = doc(db, 'vendedores', auth.currentUser.uid);\r\n        const newSaldo = this.saldoGenerado + 5;\r\n        await updateDoc(sellerRef, { saldoGenerado: newSaldo });\r\n\r\n        this.saldoGenerado = newSaldo;\r\n        this.selectedCarton = null;\r\n        await this.loadCartons();\r\n      } catch (error) {\r\n        console.error('Error al vender el cartón:', error);\r\n        alert('Error al vender el cartón: ' + error.message);\r\n      }\r\n    },\r\n    cancelSale() {\r\n      this.selectedCarton = null;\r\n    },\r\n    handleImageError(carton) {\r\n      console.error(`Error al cargar la imagen del cartón ${carton.serial}:`, carton.imageUrl);\r\n      carton.imageUrl = null;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Animación de fade-in */\r\n.animate-fade-in {\r\n  animation: fadeIn 0.5s ease-out forwards;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n/* Animación de rotación para el spinner */\r\n.animate-spin {\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}