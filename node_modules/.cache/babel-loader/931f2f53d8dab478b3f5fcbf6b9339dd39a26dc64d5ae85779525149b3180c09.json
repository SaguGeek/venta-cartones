{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport { auth, db } from '../firebase';\nimport LoginPage from '../components/LoginPage.vue';\nimport HomePage from '../views/HomePage.vue';\nimport SellerDashboard from '../components/SellerDashboard.vue';\nimport { doc, getDoc } from 'firebase/firestore';\nconst routes = [{\n  path: '/login',\n  name: 'LoginPage',\n  component: LoginPage\n}, {\n  path: '/',\n  name: 'HomePage',\n  component: HomePage,\n  meta: {\n    requiresAuth: true,\n    role: 'admin'\n  }\n}, {\n  path: '/vendedor',\n  name: 'SellerDashboard',\n  component: SellerDashboard,\n  meta: {\n    requiresAuth: true,\n    role: 'seller'\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach(async (to, from, next) => {\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const requiredRole = to.meta.role;\n  auth.onAuthStateChanged(async user => {\n    if (!user && requiresAuth) {\n      next('/login');\n      return;\n    }\n    if (user) {\n      if (to.path === '/login') {\n        const isAdmin = user.email === 'master1@example.com';\n        const sellerDoc = await getDoc(doc(db, 'vendedores', user.uid));\n        const isSeller = sellerDoc.exists();\n        if (isAdmin) {\n          next('/');\n        } else if (isSeller) {\n          next('/vendedor');\n        } else {\n          await auth.signOut();\n          next('/login');\n        }\n        return;\n      }\n      if (requiresAuth && requiredRole) {\n        const isAdmin = user.email === 'master1@example.com';\n        const sellerDoc = await getDoc(doc(db, 'vendedores', user.uid));\n        const isSeller = sellerDoc.exists();\n        if (requiredRole === 'admin' && isAdmin) {\n          next();\n        } else if (requiredRole === 'seller' && isSeller) {\n          next();\n        } else {\n          await auth.signOut();\n          if (isAdmin) {\n            next('/');\n          } else if (isSeller) {\n            next('/vendedor');\n          } else {\n            next('/login');\n          }\n        }\n      } else {\n        next();\n      }\n    } else {\n      next();\n    }\n  });\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","auth","db","LoginPage","HomePage","SellerDashboard","doc","getDoc","routes","path","name","component","meta","requiresAuth","role","router","history","beforeEach","to","from","next","matched","some","record","requiredRole","onAuthStateChanged","user","isAdmin","email","sellerDoc","uid","isSeller","exists","signOut"],"sources":["D:/Lotweb/venta-cartones/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport { auth, db } from '../firebase';\r\nimport LoginPage from '../components/LoginPage.vue';\r\nimport HomePage from '../views/HomePage.vue';\r\nimport SellerDashboard from '../components/SellerDashboard.vue';\r\nimport { doc, getDoc } from 'firebase/firestore';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/login',\r\n    name: 'LoginPage',\r\n    component: LoginPage\r\n  },\r\n  {\r\n    path: '/',\r\n    name: 'HomePage',\r\n    component: HomePage,\r\n    meta: { requiresAuth: true, role: 'admin' }\r\n  },\r\n  {\r\n    path: '/vendedor',\r\n    name: 'SellerDashboard',\r\n    component: SellerDashboard,\r\n    meta: { requiresAuth: true, role: 'seller' }\r\n  }\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n});\r\n\r\nrouter.beforeEach(async (to, from, next) => {\r\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\r\n  const requiredRole = to.meta.role;\r\n\r\n  auth.onAuthStateChanged(async (user) => {\r\n    if (!user && requiresAuth) {\r\n      next('/login');\r\n      return;\r\n    }\r\n\r\n    if (user) {\r\n      if (to.path === '/login') {\r\n        const isAdmin = user.email === 'master1@example.com';\r\n        const sellerDoc = await getDoc(doc(db, 'vendedores', user.uid));\r\n        const isSeller = sellerDoc.exists();\r\n\r\n        if (isAdmin) {\r\n          next('/');\r\n        } else if (isSeller) {\r\n          next('/vendedor');\r\n        } else {\r\n          await auth.signOut();\r\n          next('/login');\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (requiresAuth && requiredRole) {\r\n        const isAdmin = user.email === 'master1@example.com';\r\n        const sellerDoc = await getDoc(doc(db, 'vendedores', user.uid));\r\n        const isSeller = sellerDoc.exists();\r\n\r\n        if (requiredRole === 'admin' && isAdmin) {\r\n          next();\r\n        } else if (requiredRole === 'seller' && isSeller) {\r\n          next();\r\n        } else {\r\n          await auth.signOut();\r\n          if (isAdmin) {\r\n            next('/');\r\n          } else if (isSeller) {\r\n            next('/vendedor');\r\n          } else {\r\n            next('/login');\r\n          }\r\n        }\r\n      } else {\r\n        next();\r\n      }\r\n    } else {\r\n      next();\r\n    }\r\n  });\r\n});\r\n\r\nexport default router;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}