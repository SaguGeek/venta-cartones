{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nexport default {\n  data() {\n    return {\n      selectedFiles: [],\n      uploadedUrls: [],\n      duplicates: [],\n      uploadErrors: [],\n      uploading: false,\n      uploadedCount: 0,\n      totalFiles: 0,\n      progress: 0,\n      showProgressModal: false,\n      cloudinaryUrl: 'https://api.cloudinary.com/v1_1/dardyvsja/image/upload',\n      uploadPreset: 'cartones_upload'\n    };\n  },\n  methods: {\n    onFileChange(event) {\n      this.selectedFiles = Array.from(event.target.files);\n      this.uploadedUrls = [];\n      this.duplicates = [];\n      this.uploadErrors = [];\n      this.showProgressModal = false;\n    },\n    async checkAndUploadImages() {\n      if (this.selectedFiles.length === 0) {\n        this.$toast.error('Por favor, selecciona al menos una imagen.');\n        return;\n      }\n      this.uploading = true;\n      this.totalFiles = this.selectedFiles.length;\n      this.uploadedCount = 0;\n      this.progress = 0;\n      this.showProgressModal = true;\n      const serials = this.selectedFiles.map(file => file.name.split('.')[0]);\n      this.$emit('check-duplicates', {\n        serials,\n        files: this.selectedFiles\n      }, async nonDuplicates => {\n        if (nonDuplicates.length === 0) {\n          this.$toast.error('Todos los archivos seleccionados ya existen.');\n          this.uploading = false;\n          this.showProgressModal = false;\n          return;\n        }\n        this.duplicates = this.selectedFiles.filter(file => !nonDuplicates.some(nd => nd.name === file.name)).map(file => file.name);\n        const uploadPromises = nonDuplicates.map(async file => {\n          const serial = file.name.split('.')[0];\n          const formData = new FormData();\n          formData.append('file', file);\n          formData.append('upload_preset', this.uploadPreset);\n          try {\n            const response = await fetch(this.cloudinaryUrl, {\n              method: 'POST',\n              body: formData\n            });\n            const data = await response.json();\n            if (data.secure_url) {\n              this.uploadedUrls.push(data.secure_url);\n              this.uploadedCount++;\n              this.progress = Math.round(this.uploadedCount / this.totalFiles * 100);\n              return {\n                serial,\n                imageUrl: data.secure_url\n              };\n            } else {\n              throw new Error(`Error al subir ${file.name}: ${JSON.stringify(data)}`);\n            }\n          } catch (error) {\n            console.error(`Error al subir ${file.name}:`, error);\n            return null;\n          }\n        });\n        try {\n          const results = await Promise.all(uploadPromises);\n          const validResults = results.filter(result => result !== null);\n          if (validResults.length > 0) {\n            this.$emit('images-uploaded', validResults);\n            this.$toast.success(`${validResults.length} de ${nonDuplicates.length} im치genes subidas correctamente.`);\n          } else {\n            this.$toast.error('No se subieron im치genes correctamente.');\n          }\n        } catch (error) {\n          console.error('Error en el proceso de subida:', error);\n          this.$toast.error('Error en el proceso de subida: ' + error.message);\n        } finally {\n          this.uploading = false;\n          this.progress = 100;\n          setTimeout(() => {\n            this.showProgressModal = false;\n          }, 1000); // Mantener el modal visible por 1 segundo al terminar\n        }\n      });\n    },\n    closeProgressModal() {\n      if (!this.uploading) {\n        this.showProgressModal = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","selectedFiles","uploadedUrls","duplicates","uploadErrors","uploading","uploadedCount","totalFiles","progress","showProgressModal","cloudinaryUrl","uploadPreset","methods","onFileChange","event","Array","from","target","files","checkAndUploadImages","length","$toast","error","serials","map","file","name","split","$emit","nonDuplicates","filter","some","nd","uploadPromises","serial","formData","FormData","append","response","fetch","method","body","json","secure_url","push","Math","round","imageUrl","Error","JSON","stringify","console","results","Promise","all","validResults","result","success","message","setTimeout","closeProgressModal"],"sources":["D:\\Lotweb\\venta-cartones\\src\\components\\UploadCarton.vue"],"sourcesContent":["```vue\r\n<template>\r\n  <div class=\"bg-white p-6 rounded-lg shadow-md mb-6\">\r\n    <h2 class=\"text-2xl font-semibold text-gray-800 mb-4\">Subir Cartones</h2>\r\n    <div class=\"flex flex-col items-center\">\r\n      <input\r\n        type=\"file\"\r\n        @change=\"onFileChange\"\r\n        accept=\"image/*\"\r\n        multiple\r\n        class=\"mb-4 p-2 border rounded-md w-full max-w-md\"\r\n      />\r\n      <button\r\n        @click=\"checkAndUploadImages\"\r\n        class=\"bg-blue-600 text-white px-6 py-2 rounded-md hover:bg-blue-700 transition flex items-center justify-center\"\r\n        :disabled=\"uploading || !selectedFiles.length\"\r\n      >\r\n        <span v-if=\"uploading\" class=\"flex items-center\">\r\n          <svg class=\"animate-spin h-5 w-5 mr-2 text-white\" viewBox=\"0 0 24 24\">\r\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n          </svg>\r\n          Subiendo...\r\n        </span>\r\n        <span v-else>Subir Im치genes</span>\r\n      </button>\r\n    </div>\r\n    <div v-if=\"duplicates.length > 0\" class=\"mt-4\">\r\n      <h3 class=\"text-lg font-medium text-red-600\">Archivos ya existentes:</h3>\r\n      <ul class=\"mt-2\">\r\n        <li v-for=\"duplicate in duplicates\" :key=\"duplicate\" class=\"text-red-600\">{{ duplicate }}</li>\r\n      </ul>\r\n    </div>\r\n    <!-- Modal de Progreso -->\r\n    <div v-if=\"showProgressModal\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div class=\"bg-white p-6 rounded-lg shadow-lg max-w-md w-full\">\r\n        <h3 class=\"text-xl font-semibold text-gray-800 mb-4\">Subiendo Im치genes</h3>\r\n        <div class=\"w-full bg-gray-200 rounded-full h-4 mb-2\">\r\n          <div\r\n            class=\"bg-blue-600 h-4 rounded-full transition-all duration-300\"\r\n            :style=\"{ width: progress + '%' }\"\r\n          ></div>\r\n        </div>\r\n        <p class=\"text-center text-gray-700\">{{ uploadedCount }} de {{ totalFiles }} subidas</p>\r\n        <button\r\n          @click=\"closeProgressModal\"\r\n          class=\"mt-4 bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition\"\r\n          :disabled=\"uploading\"\r\n        >\r\n          Cerrar\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedFiles: [],\r\n      uploadedUrls: [],\r\n      duplicates: [],\r\n      uploadErrors: [],\r\n      uploading: false,\r\n      uploadedCount: 0,\r\n      totalFiles: 0,\r\n      progress: 0,\r\n      showProgressModal: false,\r\n      cloudinaryUrl: 'https://api.cloudinary.com/v1_1/dardyvsja/image/upload',\r\n      uploadPreset: 'cartones_upload'\r\n    };\r\n  },\r\n  methods: {\r\n    onFileChange(event) {\r\n      this.selectedFiles = Array.from(event.target.files);\r\n      this.uploadedUrls = [];\r\n      this.duplicates = [];\r\n      this.uploadErrors = [];\r\n      this.showProgressModal = false;\r\n    },\r\n    async checkAndUploadImages() {\r\n      if (this.selectedFiles.length === 0) {\r\n        this.$toast.error('Por favor, selecciona al menos una imagen.');\r\n        return;\r\n      }\r\n\r\n      this.uploading = true;\r\n      this.totalFiles = this.selectedFiles.length;\r\n      this.uploadedCount = 0;\r\n      this.progress = 0;\r\n      this.showProgressModal = true;\r\n\r\n      const serials = this.selectedFiles.map(file => file.name.split('.')[0]);\r\n      this.$emit('check-duplicates', { serials, files: this.selectedFiles }, async (nonDuplicates) => {\r\n        if (nonDuplicates.length === 0) {\r\n          this.$toast.error('Todos los archivos seleccionados ya existen.');\r\n          this.uploading = false;\r\n          this.showProgressModal = false;\r\n          return;\r\n        }\r\n\r\n        this.duplicates = this.selectedFiles\r\n          .filter(file => !nonDuplicates.some(nd => nd.name === file.name))\r\n          .map(file => file.name);\r\n\r\n        const uploadPromises = nonDuplicates.map(async (file) => {\r\n          const serial = file.name.split('.')[0];\r\n          const formData = new FormData();\r\n          formData.append('file', file);\r\n          formData.append('upload_preset', this.uploadPreset);\r\n\r\n          try {\r\n            const response = await fetch(this.cloudinaryUrl, {\r\n              method: 'POST',\r\n              body: formData\r\n            });\r\n            const data = await response.json();\r\n            if (data.secure_url) {\r\n              this.uploadedUrls.push(data.secure_url);\r\n              this.uploadedCount++;\r\n              this.progress = Math.round((this.uploadedCount / this.totalFiles) * 100);\r\n              return { serial, imageUrl: data.secure_url };\r\n            } else {\r\n              throw new Error(`Error al subir ${file.name}: ${JSON.stringify(data)}`);\r\n            }\r\n          } catch (error) {\r\n            console.error(`Error al subir ${file.name}:`, error);\r\n            return null;\r\n          }\r\n        });\r\n\r\n        try {\r\n          const results = await Promise.all(uploadPromises);\r\n          const validResults = results.filter(result => result !== null);\r\n          if (validResults.length > 0) {\r\n            this.$emit('images-uploaded', validResults);\r\n            this.$toast.success(`${validResults.length} de ${nonDuplicates.length} im치genes subidas correctamente.`);\r\n          } else {\r\n            this.$toast.error('No se subieron im치genes correctamente.');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error en el proceso de subida:', error);\r\n          this.$toast.error('Error en el proceso de subida: ' + error.message);\r\n        } finally {\r\n          this.uploading = false;\r\n          this.progress = 100;\r\n          setTimeout(() => {\r\n            this.showProgressModal = false;\r\n          }, 1000); // Mantener el modal visible por 1 segundo al terminar\r\n        }\r\n      });\r\n    },\r\n    closeProgressModal() {\r\n      if (!this.uploading) {\r\n        this.showProgressModal = false;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Tailwind maneja los estilos */\r\n</style>\r\n```"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}