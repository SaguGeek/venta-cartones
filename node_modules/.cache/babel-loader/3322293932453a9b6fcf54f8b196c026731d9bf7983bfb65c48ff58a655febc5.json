{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport UploadCarton from '../components/UploadCarton.vue';\nimport AssignCartons from '../components/AssignCartons.vue';\nimport CartonList from '../components/CartonList.vue';\nimport SellerList from '../components/SellerList.vue';\nimport { db } from '../firebase';\nimport { collection, query, where, getDocs, addDoc } from 'firebase/firestore';\nimport { auth } from '../firebase';\nimport { signOut } from 'firebase/auth';\nexport default {\n  name: 'HomePage',\n  components: {\n    UploadCarton,\n    AssignCartons,\n    CartonList,\n    SellerList\n  },\n  methods: {\n    async checkDuplicates({\n      serials,\n      files\n    }, callback) {\n      try {\n        const cartonesRef = collection(db, 'cartones');\n        const q = query(cartonesRef, where('serial', 'in', serials));\n        const querySnapshot = await getDocs(q);\n        const existingSerials = querySnapshot.docs.map(doc => doc.data().serial);\n        const nonDuplicates = files.filter(file => !existingSerials.includes(file.name.split('.')[0]));\n        callback(nonDuplicates);\n      } catch (error) {\n        console.error('Error al verificar duplicados:', error);\n        alert('Error al verificar duplicados: ' + error.message);\n        callback([]);\n      }\n    },\n    async handleImagesUploaded(images) {\n      let successCount = 0; // Declarada como variable local\n      try {\n        for (const image of images) {\n          if (image.serial && image.imageUrl) {\n            const docRef = await addDoc(collection(db, 'cartones'), {\n              serial: image.serial,\n              imageUrl: image.imageUrl,\n              estado: 'disponible',\n              createdAt: new Date(),\n              vendedorId: null\n            });\n            console.log(`Cartón ${image.serial} guardado con ID:`, docRef.id);\n            successCount++;\n          } else if (typeof image === 'string') {\n            const serial = this.selectedFiles.find(file => file.name.includes(image.split('/').pop().split('.')[0]))?.name.split('.')[0];\n            if (serial) {\n              const docRef = await addDoc(collection(db, 'cartones'), {\n                serial: serial,\n                imageUrl: image,\n                estado: 'disponible',\n                createdAt: new Date(),\n                vendedorId: null\n              });\n              console.log(`Cartón ${serial} guardado con ID:`, docRef.id);\n              successCount++;\n            }\n          }\n        }\n        alert(`${successCount} de ${images.length} cartones se guardaron exitosamente en Firestore`);\n      } catch (error) {\n        console.error('Error al guardar los cartones:', error);\n        alert(`Error al guardar los cartones: ${error.message}. Se guardaron ${successCount} de ${images.length} cartones.`);\n      }\n    },\n    async refreshCartones() {\n      if (this.$refs.cartonList && typeof this.$refs.cartonList.loadCartones === 'function') {\n        await this.$refs.cartonList.loadCartones();\n      } else {\n        console.warn('loadCartones no está disponible en CartonList');\n      }\n    },\n    async logout() {\n      try {\n        await signOut(auth);\n        this.$router.push('/login');\n        console.log('Sesión cerrada con éxito');\n      } catch (error) {\n        console.error('Error al cerrar sesión:', error);\n        alert('Error al cerrar sesión: ' + error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["UploadCarton","AssignCartons","CartonList","SellerList","db","collection","query","where","getDocs","addDoc","auth","signOut","name","components","methods","checkDuplicates","serials","files","callback","cartonesRef","q","querySnapshot","existingSerials","docs","map","doc","data","serial","nonDuplicates","filter","file","includes","split","error","console","alert","message","handleImagesUploaded","images","successCount","image","imageUrl","docRef","estado","createdAt","Date","vendedorId","log","id","selectedFiles","find","pop","length","refreshCartones","$refs","cartonList","loadCartones","warn","logout","$router","push"],"sources":["D:\\Lotweb\\venta-cartones\\src\\views\\HomePage.vue"],"sourcesContent":["```vue\r\n<template>\r\n  <div class=\"min-h-screen bg-gray-100\">\r\n    <!-- Barra de Navegación -->\r\n    <header class=\"bg-indigo-900 text-white shadow-lg\">\r\n      <div class=\"container mx-auto px-4 py-4 flex justify-between items-center\">\r\n        <div class=\"flex items-center space-x-3\">\r\n          <span class=\"text-2xl font-bold text-purple-300 animate-pulse\">VC</span>\r\n          <h1 class=\"text-2xl font-semibold\">Dashboard Admin</h1>\r\n        </div>\r\n        <button\r\n          @click=\"logout\"\r\n          class=\"bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-opacity-50 transition duration-300\"\r\n        >\r\n          Cerrar Sesión\r\n        </button>\r\n      </div>\r\n    </header>\r\n\r\n    <!-- Contenido Principal -->\r\n    <main class=\"container mx-auto px-4 py-8\">\r\n      <div class=\"grid grid-cols-1 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-6\">\r\n        <!-- Sección de Subir Cartones -->\r\n        <div class=\"bg-white p-6 rounded-xl shadow-lg transition-all duration-300 hover:shadow-xl\">\r\n          <h2 class=\"text-xl font-semibold text-gray-800 mb-4\">Subir Cartones</h2>\r\n          <UploadCarton @check-duplicates=\"checkDuplicates\" @images-uploaded=\"handleImagesUploaded\" />\r\n        </div>\r\n\r\n        <!-- Sección de Asignar Cartones -->\r\n        <div class=\"bg-white p-6 rounded-xl shadow-lg transition-all duration-300 hover:shadow-xl\">\r\n          <h2 class=\"text-xl font-semibold text-gray-800 mb-4\">Asignar Cartones</h2>\r\n          <AssignCartons @cartones-asignados=\"refreshCartones\" />\r\n        </div>\r\n\r\n        <!-- Sección de Lista de Cartones -->\r\n        <div class=\"bg-white p-6 rounded-xl shadow-lg transition-all duration-300 hover:shadow-xl\">\r\n          <h2 class=\"text-xl font-semibold text-gray-800 mb-4\">Lista de Cartones</h2>\r\n          <CartonList ref=\"cartonList\" />\r\n        </div>\r\n\r\n        <!-- Sección de Lista de Vendedores -->\r\n        <div class=\"bg-white p-6 rounded-xl shadow-lg transition-all duration-300 hover:shadow-xl\">\r\n          <h2 class=\"text-xl font-semibold text-gray-800 mb-4\">Lista de Vendedores</h2>\r\n          <SellerList />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport UploadCarton from '../components/UploadCarton.vue';\r\nimport AssignCartons from '../components/AssignCartons.vue';\r\nimport CartonList from '../components/CartonList.vue';\r\nimport SellerList from '../components/SellerList.vue';\r\nimport { db } from '../firebase';\r\nimport { collection, query, where, getDocs, addDoc } from 'firebase/firestore';\r\nimport { auth } from '../firebase';\r\nimport { signOut } from 'firebase/auth';\r\n\r\nexport default {\r\n  name: 'HomePage',\r\n  components: {\r\n    UploadCarton,\r\n    AssignCartons,\r\n    CartonList,\r\n    SellerList\r\n  },\r\n  methods: {\r\n    async checkDuplicates({ serials, files }, callback) {\r\n      try {\r\n        const cartonesRef = collection(db, 'cartones');\r\n        const q = query(cartonesRef, where('serial', 'in', serials));\r\n        const querySnapshot = await getDocs(q);\r\n        const existingSerials = querySnapshot.docs.map(doc => doc.data().serial);\r\n        const nonDuplicates = files.filter(file => !existingSerials.includes(file.name.split('.')[0]));\r\n        callback(nonDuplicates);\r\n      } catch (error) {\r\n        console.error('Error al verificar duplicados:', error);\r\n        alert('Error al verificar duplicados: ' + error.message);\r\n        callback([]);\r\n      }\r\n    },\r\n    async handleImagesUploaded(images) {\r\n      let successCount = 0; // Declarada como variable local\r\n      try {\r\n        for (const image of images) {\r\n          if (image.serial && image.imageUrl) {\r\n            const docRef = await addDoc(collection(db, 'cartones'), {\r\n              serial: image.serial,\r\n              imageUrl: image.imageUrl,\r\n              estado: 'disponible',\r\n              createdAt: new Date(),\r\n              vendedorId: null\r\n            });\r\n            console.log(`Cartón ${image.serial} guardado con ID:`, docRef.id);\r\n            successCount++;\r\n          } else if (typeof image === 'string') {\r\n            const serial = this.selectedFiles.find(file => file.name.includes(image.split('/').pop().split('.')[0]))?.name.split('.')[0];\r\n            if (serial) {\r\n              const docRef = await addDoc(collection(db, 'cartones'), {\r\n                serial: serial,\r\n                imageUrl: image,\r\n                estado: 'disponible',\r\n                createdAt: new Date(),\r\n                vendedorId: null\r\n              });\r\n              console.log(`Cartón ${serial} guardado con ID:`, docRef.id);\r\n              successCount++;\r\n            }\r\n          }\r\n        }\r\n        alert(`${successCount} de ${images.length} cartones se guardaron exitosamente en Firestore`);\r\n      } catch (error) {\r\n        console.error('Error al guardar los cartones:', error);\r\n        alert(`Error al guardar los cartones: ${error.message}. Se guardaron ${successCount} de ${images.length} cartones.`);\r\n      }\r\n    },\r\n    async refreshCartones() {\r\n      if (this.$refs.cartonList && typeof this.$refs.cartonList.loadCartones === 'function') {\r\n        await this.$refs.cartonList.loadCartones();\r\n      } else {\r\n        console.warn('loadCartones no está disponible en CartonList');\r\n      }\r\n    },\r\n    async logout() {\r\n      try {\r\n        await signOut(auth);\r\n        this.$router.push('/login');\r\n        console.log('Sesión cerrada con éxito');\r\n      } catch (error) {\r\n        console.error('Error al cerrar sesión:', error);\r\n        alert('Error al cerrar sesión: ' + error.message);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Animación de pulso para el logo */\r\n.animate-pulse {\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n  50% {\r\n    transform: scale(1.1);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}